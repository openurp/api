create table base.buildings (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, campus_id integer not null, building_type_id integer, name varchar(80) not null, updated_at timestamptz not null);
create table base.c_book_award_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_book_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_course_ability_rates (rate integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_course_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_course_types (parent_id integer, optional boolean not null, practical boolean not null, id integer not null, begin_on date not null, end_on date, major boolean not null, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_education_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_fee_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_std_label_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_std_labels (id integer not null, begin_on date not null, label_type_id integer not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.c_std_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.calendar_stages (school_id integer not null, name varchar(100) not null, vacation boolean not null, id integer not null);
create table base.calendars (school_id integer not null, code varchar(10) not null, id integer not null, begin_on date not null, end_on date, first_weekday integer not null, name varchar(80) not null, updated_at timestamptz not null);
create table base.campuses (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, name varchar(80) not null, updated_at timestamptz not null);
create table base.classrooms (en_name varchar(255), room_no varchar(20), room_type_id integer not null, building_id integer, code varchar(20) not null, begin_on date not null, floor_no integer not null, short_name varchar(255), end_on date, capacity integer not null, school_id integer not null, exam_capacity integer not null, name varchar(100) not null, updated_at timestamptz not null, id bigint not null, course_capacity integer not null, campus_id integer not null);
create table base.classrooms_departs (classroom_id bigint not null, department_id integer not null);
create table base.classrooms_projects (classroom_id bigint not null, project_id integer not null);
create table base.course_clusters (name varchar(100) not null, project_id integer not null, code varchar(20) not null, id bigint not null, target_id bigint, component boolean not null, edu_type_id integer not null, level_id integer not null);
create table base.course_hours (course_id bigint not null, weeks integer not null, credit_hours integer not null, id bigint not null, teaching_nature_id integer not null);
create table base.course_levels (course_id bigint not null, credits float4, id bigint not null, level_id integer not null);
create table base.course_units (name varchar(20) not null, setting_id integer not null, en_name varchar(30) not null, begin_at smallint not null, id integer not null, indexno integer not null, part_id integer not null, end_at smallint not null);
create table base.courses (course_type_id integer not null, credit_hours integer not null, code varchar(32) not null, remark varchar(500), begin_on date not null, teaching_office_id bigint, end_on date, name varchar(222) not null, updated_at timestamptz not null, weeks integer not null, project_id integer not null, en_name varchar(300), has_makeup boolean not null, exam_mode_id integer not null, department_id integer not null, cluster_id bigint, id bigint not null, calgp boolean not null, nature_id integer not null, week_hours integer not null, category_id integer, default_credits float4 not null);
create table base.courses_ability_rates (course_id bigint not null, course_ability_rate_id integer not null);
create table base.courses_grading_modes (course_id bigint not null, grading_mode_id integer not null);
create table base.courses_majors (course_id bigint not null, major_id bigint not null);
create table base.courses_prerequisites (course_id bigint not null, prerequisite_id bigint not null);
create table base.courses_teachers (course_id bigint not null, teacher_id bigint not null);
create table base.courses_textbooks (course_id bigint not null, textbook_id bigint not null);
create table base.courses_xmajors (course_id bigint not null, major_id bigint not null);
create table base.departments (research boolean not null, en_name varchar(100), teaching boolean not null, code varchar(10) not null, id integer not null, remark varchar(200), category_id integer, short_name varchar(100), end_on date, school_id integer not null, parent_id integer, name varchar(80) not null, updated_at timestamptz not null, begin_on date not null, indexno varchar(20) not null);
create table base.departments_campuses (department_id integer not null, campus_id integer not null);
create table base.direction_journals (direction_id bigint not null, id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, level_id integer not null);
create table base.directions (project_id integer not null, en_name varchar(255), code varchar(32) not null, id bigint not null, remark varchar(200), begin_on date not null, end_on date, major_id bigint not null, name varchar(100) not null, updated_at timestamptz not null);
create table base.extern_schools (code varchar(255) not null, id integer not null, begin_on date not null, end_on date, name varchar(255) not null, updated_at timestamptz not null);
create table base.extern_students (school_id integer not null, updated_at timestamptz not null, major_name varchar(255), std_id bigint not null, exchange boolean not null, id bigint not null, begin_on date not null, category_id integer not null, end_on date not null, level_id integer not null);
create table base.grades (name varchar(255) not null, project_id integer not null, en_name varchar(255), code varchar(255) not null, id bigint not null, begin_on date not null, end_on date not null);
create table base.graduate_seasons (name varchar(255) not null, project_id integer not null, graduate_year integer not null, code varchar(255) not null, id bigint not null);
create table base.graduates (certificate_no varchar(255) not null, degree_id integer, std_id bigint not null, id bigint not null, whereto_go_id integer, updated_at timestamptz not null, foreign_lang_passed_on date, batch_no integer not null, degree_award_on date, result_id integer not null, season_id bigint not null, graduate_on date not null, diploma_no varchar(255));
create table base.major_disciplines (discipline_code varchar(50), id bigint not null, begin_on date not null, category_id integer not null, end_on date, major_id bigint not null);
create table base.major_journals (id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, major_id bigint not null, level_id integer not null);
create table base.majors (en_name varchar(150), code varchar(20) not null, id bigint not null, begin_on date not null, short_name varchar(255), end_on date, name varchar(50) not null, updated_at timestamptz not null, project_id integer not null, remark varchar(100));
create table base.mentors (name varchar(255) not null, id bigint not null, begin_on date not null, staff_id bigint not null, end_on date);
create table base.minor_majors (name varchar(255) not null, en_name varchar(255), institution_id integer not null, code varchar(255) not null, id bigint not null, begin_on date not null, category_id integer not null, end_on date, major_id bigint);
create table base.people (phonetic_name varchar(100), political_status_id integer, country_id integer, compatriot_type_id integer, code varchar(30) not null unique, id bigint not null, language_id integer, gender_id integer not null, birthday date, id_type_id integer not null, family_name varchar(80), given_name varchar(80), middle_name varchar(50), formated_name varchar(100) not null, updated_at timestamptz not null, home_town varchar(255), nation_id integer, birthplace varchar(255), former_name varchar(100), religion_id integer);
create table base.project_codes (project_id integer not null, code_ids varchar(2000) not null, id bigint not null, class_name varchar(100) not null);
create table base.project_properties (name varchar(255) not null, project_id integer not null, description varchar(200) not null, id bigint not null, value_ varchar(2000) not null, type_name varchar(100) not null);
create table base.projects (school_id integer not null, description varchar(500) not null, begin_on date not null, category_id integer not null, end_on date, minor boolean not null, name varchar(100) not null, updated_at timestamptz not null, calendar_id integer not null, code varchar(10) not null unique, id integer not null);
create table base.projects_campuses (project_id integer not null, campus_id integer not null);
create table base.projects_departments (project_id integer not null, department_id integer not null);
create table base.projects_edu_types (project_id integer not null, education_type_id integer not null);
create table base.projects_levels (project_id integer not null, education_level_id integer not null);
create table base.projects_std_labels (project_id integer not null, std_label_id integer not null);
create table base.projects_std_types (project_id integer not null, std_type_id integer not null);
create table base.rooms (school_id integer not null, room_type_id integer not null, building_id integer, code varchar(10) not null, department_id integer, id integer not null, remark varchar(200), begin_on date not null, floor_no integer not null, end_on date, campus_id integer not null, name varchar(80) not null, updated_at timestamptz not null);
create table base.school_lengths (maximum float4 not null, id bigint not null, from_grade_id bigint not null, minimum float4 not null, major_id bigint not null, level_id integer not null, to_grade_id bigint, normal float4 not null);
create table base.schools (name varchar(50) not null, institution_id integer not null, logo_url varchar(255) not null, code varchar(10) not null unique, id integer not null, begin_on date not null, short_name varchar(255), end_on date);
create table base.semester_stages (semester_id integer not null, stage_id integer not null, id integer not null, remark varchar(500), begin_on date not null, end_on date not null);
create table base.semesters (name varchar(10) not null, archived boolean not null, school_year varchar(10) not null, id integer not null, remark varchar(255), begin_on date not null, end_on date not null, calendar_id integer not null, code varchar(15) not null);
create table base.squads (mentor_id bigint, en_name varchar(255), direction_id bigint, std_count integer not null, code varchar(20) not null, department_id integer not null, begin_on date not null, std_type_id integer, plan_count integer not null, short_name varchar(255), end_on date not null, campus_id integer not null, edu_type_id integer not null, level_id integer not null, name varchar(100) not null, updated_at timestamptz not null, master_id bigint, project_id integer not null, id bigint not null, grade_id bigint not null, remark varchar(100), major_id bigint, tutor_id bigint);
create table base.staffs (school_id integer not null, degree_award_by varchar(255), political_status_id integer, code varchar(20) not null, id bigint not null, external_ boolean not null, formal_hr boolean not null, homepage varchar(200), title_id integer, end_on date, birthday date, id_type_id integer, organization varchar(200), name varchar(100) not null, updated_at timestamptz not null, email varchar(100), nation_id integer, degree_id integer, department_id integer not null, education_degree_id integer, degree_level_id integer, begin_on date not null, id_number varchar(18), status_id integer not null, mobile varchar(20), staff_type_id integer not null, parttime boolean not null, gender_id integer not null);
create table base.student_states (direction_id bigint, std_id bigint not null, id bigint not null, end_on date not null, campus_id integer not null, major_id bigint not null, department_id integer not null, inschool boolean not null, squad_id bigint, grade_id bigint not null, remark varchar(200), begin_on date not null, status_id integer not null);
create table base.students (duration float4 not null, project_id integer not null, en_name varchar(255), advisor_id bigint, code varchar(255) not null, id bigint not null, std_type_id integer not null, end_on date not null, registed boolean not null, name varchar(255) not null, updated_at timestamptz not null, study_on date not null, state_id bigint, remark varchar(200), graduate_on date not null, begin_on date not null, study_type_id integer not null, person_id bigint not null, tutor_id bigint, edu_type_id integer not null, gender_id integer not null, level_id integer not null);
create table base.students_labels (student_id bigint not null, std_label_id integer not null, std_label_type_id integer not null);
create table base.teachers (oqc varchar(200), name varchar(100) not null, office_id bigint, tqc_number varchar(20), department_id integer not null, id bigint not null, remark varchar(255), begin_on date not null, staff_id bigint not null, end_on date, user_id bigint not null, tutor_type_id integer);
create table base.teachers_campuses (teacher_id bigint not null, campus_id integer not null);
create table base.teachers_projects (teacher_id bigint not null, project_id integer not null);
create table base.teaching_offices (project_id integer not null, code varchar(255) not null, department_id integer not null, id bigint not null, begin_on date not null, director_id bigint, end_on date, name varchar(255) not null, updated_at timestamptz not null);
create table base.textbooks (name varchar(300) not null, book_type_id integer, project_id integer not null, description varchar(300), edition varchar(50) not null, published_on date not null, id bigint not null, press_id integer, author varchar(80) not null, series varchar(255), award_org varchar(255), price float4, made_in_school boolean not null, remark varchar(255), begin_on date not null, isbn varchar(100), category_id integer, award_type_id integer, end_on date, translator varchar(255));
create table base.time_settings (name varchar(20) not null, project_id integer not null, minutes_per_unit smallint not null, id integer not null, begin_on date not null, end_on date, campus_id integer);
create table base.users (school_id integer not null, email varchar(80), code varchar(30) not null, department_id integer not null, id bigint not null, remark varchar(200), begin_on date not null, category_id integer not null, end_on date, mobile varchar(15), gender_id integer not null, name varchar(80) not null, updated_at timestamptz not null, en_name varchar(255));
create table base.versions (updated_at timestamptz not null, description varchar(200) not null, version varchar(20) not null, id integer not null);
create table code.academic_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.activity_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.admission_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.blood_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.book_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.building_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.classroom_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.compatriot_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.countries (id integer not null, begin_on date not null, short_name varchar(50) not null, end_on date, updated_at timestamptz not null, alpha3_code varchar(3) not null, alpha2_code varchar(2) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.course_natures (practical boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.course_take_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.day_parts (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, color varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.degree_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.degrees (id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.department_categories (id integer not null, end_on date, parent_id integer, updated_at timestamptz not null, begin_on date not null, indexno varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.difficulty_causes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.difficulty_degrees (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.discipline_catalogs (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.discipline_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.disciplines (catalog_id integer not null, id integer not null, begin_on date not null, category_id integer not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.divisions (id integer not null, begin_on date not null, end_on date, parent_id integer, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.duty_grades (duty_type_id integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.duty_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.edu_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_degrees (result_id integer not null, id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_levels (to_level_id integer not null, id integer not null, begin_on date not null, from_level_id integer not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_results (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.election_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.employ_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.enroll_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_forms (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_statuses (attended boolean not null, has_deferred boolean not null, id integer not null, begin_on date not null, end_on date, cheating boolean not null, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_types (id integer not null, for_deferred boolean not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.family_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.family_relationships (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.fee_origins (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.genders (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.grade_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, exam_type_id integer, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.grading_modes (numerical boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.health_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.household_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.hsk_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, grade integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.id_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.institutions (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.job_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.language_abilities (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.languages (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.marital_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.nations (id integer not null, end_on date, updated_at timestamptz not null, begin_on date not null, alpha_code varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.passport_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.political_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.post_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.post_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.press_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.presses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.professional_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.professional_titles (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.publication_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.publications (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.railway_stations (division_id integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, jianpin varchar(50) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.religions (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.room_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.social_unit_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.staff_source_types (id integer not null, begin_on date not null, end_on date, parent_id integer, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.staff_types (id integer not null, begin_on date not null, end_on date, parent_id integer, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_alter_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_alter_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_punishment_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, grade integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.student_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.study_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.teach_lang_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.teaching_methods (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.teaching_natures (id integer not null, begin_on date not null, category integer not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.tutor_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.uee_subject_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.uncheckin_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.unregistered_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.user_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.visa_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.whereto_goes (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.work_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table degree.advisors (teacher_id bigint not null, email varchar(255), description varchar(4000), begin_on date not null, end_on date, id bigint not null, mobile varchar(255), max_writers bigint not null);
create table degree.advisors_departs (advisor_id bigint not null, department_id integer not null);
create table degree.commitments (updated_at timestamptz not null, writer_id bigint not null, confirmed boolean not null, id bigint not null);
create table degree.copy_checks (check_on date, passed boolean not null, word_count integer, id bigint not null, report varchar(200), writer_id bigint not null, copy_ratio float4, recheck boolean not null, remark varchar(255));
create table degree.deadlines (writer_id bigint not null, submit_at timestamptz, delay_count integer not null, id bigint not null, end_at timestamptz, stage integer not null, updated_at timestamptz not null);
create table degree.defense_groups (secretary_id bigint, department_id integer not null, id bigint not null, idx integer not null, end_at timestamptz, begin_at timestamptz, published boolean not null, office_id bigint, season_id bigint not null, place varchar(255));
create table degree.defense_infoes (defense_score integer, updated_at timestamptz not null, writer_id bigint not null, id bigint not null, group_opinion varchar(255), recorder varchar(255), answer_summary varchar(255) not null, thesis_summary varchar(255) not null, questions varchar(255), defense_on date);
create table degree.defense_members (teacher_id bigint not null, id bigint not null, group_id bigint not null, leader boolean not null);
create table degree.defense_notices (updated_at timestamptz not null, read_count integer not null, contents text not null, id bigint not null, title varchar(255) not null, group_id bigint not null);
create table degree.defense_writers (writer_id bigint not null, id bigint not null, group_id bigint not null);
create table degree.depart_plans (department_id integer not null, id bigint not null, status integer not null, audit_opinion varchar(255), thesis_plan_id bigint not null);
create table degree.depart_plans_times (depart_plan_id bigint not null, begin_on date not null, stage integer not null, end_on date not null);
create table degree.guidances (writer_id bigint not null, contents text not null, id bigint not null, idx smallint not null, stage integer not null, updated_at timestamptz not null);
create table degree.midterm_check_details (passed boolean not null, id bigint not null, check_id bigint not null, audit_opinion varchar(1000), item_id integer not null);
create table degree.midterm_check_items (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table degree.midterm_checks (writer_id bigint not null, submit_at timestamptz not null, conclusion varchar(255), id bigint not null, status integer not null, proceeding text not null);
create table degree.proposals (conditions text not null, outline text not null, writer_id bigint not null, methods text not null, submit_at timestamptz not null, confirm_at timestamptz, status integer not null, advisor_opinion text, meanings text not null, refers text not null, id bigint not null);
create table degree.subject_applies (writer_id bigint not null, current_round integer not null, first_id bigint, last_id bigint, second_id bigint, id bigint not null);
create table degree.subjects (conditions varchar(1000), advisor_id bigint not null, contents varchar(1000), id bigint not null, status integer not null, requirements varchar(1000), audit_opinion varchar(255), depart_id integer not null, name varchar(300) not null, season_id bigint not null);
create table degree.subjects_majors (subject_id bigint not null, major_id bigint not null);
create table degree.thesis_papers (name varchar(255) not null, writer_id bigint not null, submit_at timestamptz not null, id bigint not null, status integer not null, file_path varchar(255) not null, file_ext varchar(255) not null, title varchar(255) not null, copy_check_id bigint, recheck_id bigint, keywords varchar(255), audit_opinion varchar(255));
create table degree.thesis_plans (project_id integer not null, id bigint not null, begin_on date not null, end_on date not null, season_id bigint not null);
create table degree.thesis_plans_times (thesis_plan_id bigint not null, begin_on date not null, stage integer not null, end_on date not null);
create table degree.thesis_reviews (writer_id bigint not null, attitude_score integer, cross_review_opinion varchar(2000), subject_score integer, id bigint not null, cross_review_at timestamptz, advisor_review_at timestamptz, cross_review_score integer, advisor_score integer, defense_score integer, cross_reviewer_id bigint, defense_permitted boolean, defense_info_id bigint, research_score integer, cross_review_manager_id bigint, write_score integer, innovation_score integer, final_score integer);
create table degree.writers (email varchar(255), advisor_id bigint, std_id bigint not null, id bigint not null, season_id bigint not null, thesis_title varchar(255), mobile varchar(255));
create table edu.c_certificate_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.c_certificate_subjects (id integer not null, begin_on date not null, category_id integer not null, institution_code varchar(255), end_on date, institution_name varchar(255), updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.c_clazz_tags (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, color varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.cert_exempt_applies (semester_id integer not null, subject_id integer not null, std_id bigint not null, id bigint not null, status integer not null, grading_mode_id integer not null, certificate varchar(80), updated_at timestamptz not null, audit_depart_id integer not null, acquired_on date not null, attachment_path varchar(100) not null, audit_opinion varchar(255), reasons varchar(500) not null, score_text varchar(255) not null);
create table edu.cert_exempt_applies_courses (cert_exempt_apply_id bigint not null, course_id bigint not null);
create table edu.cert_signups (semester_id integer not null, subject_id integer not null, std_id bigint not null, exam_no varchar(255), id bigint not null, fee integer not null, ip varchar(255) not null, updated_at timestamptz not null);
create table edu.certificate_grades (acquired_on date not null, score float4, passed boolean not null, std_id bigint not null, exam_no varchar(80), id bigint not null, status integer not null, grading_mode_id integer not null, score_text varchar(5) not null, certificate varchar(80), updated_at timestamptz not null, subject_id integer not null, exam_status_id integer not null);
create table edu.certificate_grades_exempts (certificate_grade_id bigint not null, course_id bigint not null);
create table edu.cfg_cert_exempt_configs (semester_id integer not null, project_id integer not null, begin_at timestamptz not null, id bigint not null, notice varchar(2000) not null, edu_type_id integer not null, level_id integer not null, end_at timestamptz not null);
create table edu.cfg_cert_exempt_courses (cert_exempt_setting_id bigint not null, course_id bigint not null);
create table edu.cfg_cert_exempt_settings (subject_id integer not null, audit_depart_id integer not null, config_id bigint not null, max_count integer not null, id bigint not null, remark varchar(255), valid_months integer, min_score float4);
create table edu.cfg_cert_signup_configs (semester_id integer not null, name varchar(255) not null, project_id integer not null, begin_at timestamptz not null, prediction boolean not null, id bigint not null, notice varchar(255) not null, category_id integer not null, end_at timestamptz not null, opened boolean not null, code varchar(255) not null);
create table edu.cfg_cert_signup_exclusives (cert_signup_setting_id bigint not null, certificate_subject_id integer not null);
create table edu.cfg_cert_signup_scopes (included boolean not null, setting_id bigint not null, grades varchar(255), level_id integer not null, id bigint not null, codes varchar(20000));
create table edu.cfg_cert_signup_settings (exam_begin_at smallint not null, subject_id integer not null, re_exam_allowed boolean not null, config_id bigint not null, fee_of_material integer not null, depends_on_id integer, max_std integer not null, exam_end_at smallint not null, fee_of_outline integer not null, id bigint not null, fee_of_signup integer not null, exam_on date);
create table edu.cfg_exam_alloc_settings (min_std_exam_interval integer not null, name varchar(255) not null, project_id integer not null, exam_type_id integer not null, alloc_policy integer not null, min_occupy_ratio float4 not null, min_capacity integer not null, id bigint not null);
create table edu.cfg_grade_input_switches (semester_id integer not null, project_id integer not null, begin_at timestamptz not null, id bigint not null, remark varchar(255), end_at timestamptz not null, need_validate boolean not null);
create table edu.cfg_grade_input_switches_types (grade_input_switch_id bigint not null, grade_type_id integer not null);
create table edu.cfg_grade_rate_configs (project_id integer not null, pass_score float4 not null, id bigint not null, grading_mode_id integer not null);
create table edu.cfg_grade_rate_items (max_score float4 not null, default_score float4 not null, gp_exp varchar(255), config_id bigint not null, min_score float4 not null, id bigint not null, grade varchar(255) not null);
create table edu.cfg_schedule_setting_departs (setting_id bigint not null, begin_at timestamptz not null, id bigint not null, depart_id integer not null, end_at timestamptz not null);
create table edu.cfg_schedule_settings (semester_id integer not null, place_published boolean not null, project_id integer not null, begin_at timestamptz not null, clazz_editable boolean not null, time_published boolean not null, end_at timestamptz not null, id bigint not null);
create table edu.cfg_std_credit_stats (semester_id integer not null, max_new_count integer not null, max_credits float4 not null, std_id bigint not null, repeat_count integer not null, id bigint not null, total_new_count integer not null, total_credits float4 not null);
create table edu.cfg_transcript_templates (page_size varchar(255) not null, project_id integer not null, code varchar(255) not null, options varchar(255) not null, id bigint not null, remark varchar(255), orientation varchar(255) not null, name varchar(255) not null, updated_at timestamptz not null, category varchar(255) not null, template varchar(255) not null);
create table edu.clazz_book_stats (clazz_id bigint not null, std_count integer not null, stat_at timestamptz not null, id bigint not null, textbook_id bigint not null, teacher_count integer not null);
create table edu.clazz_bulletins (contents varchar(1000), id bigint not null, contact_channel varchar(150), clazz_id bigint not null, contact_qrcode_path varchar(300));
create table edu.clazz_groups (semester_id integer not null, name varchar(255) not null, course_id bigint, project_id integer not null, id bigint not null, teach_depart_id integer);
create table edu.clazz_materials (id bigint not null, file_path varchar(400), updated_by_id bigint not null, name varchar(300) not null, updated_at timestamptz not null, clazz_id bigint not null, url varchar(400));
create table edu.clazz_notice_files (id bigint not null, notice_id bigint not null, file_path varchar(200) not null, media_type varchar(100) not null, name varchar(255) not null, updated_at timestamptz not null);
create table edu.clazz_notices (updated_at timestamptz not null, clazz_id bigint not null, contents varchar(1500) not null, id bigint not null, title varchar(300) not null, updated_by_id bigint not null);
create table edu.clazzes (semester_id integer not null, project_id integer not null, id bigint not null, exam_duration smallint not null, exam_form_id integer, exam_room_type_id integer not null, exam_begin_at smallint not null, exam_on date, exam_end_at smallint not null, has_makeup boolean not null, exam_mode_id integer not null, status integer not null, name varchar(500) not null, updated_at timestamptz not null, course_id bigint not null, reserved integer not null, shared boolean not null, locked boolean not null, gender_ratio smallint not null, grades varchar(40), depart_id integer, capacity integer not null, actual integer not null, subject varchar(255), course_type_id integer not null, teach_depart_id integer not null, remark varchar(255), crn varchar(32) not null, weekstate bigint not null, credit_hours integer not null, depart_arranged boolean not null, room_type_id integer not null, campus_id integer not null, group_id bigint, lang_type_id integer not null);
create table edu.clazzes_ability_rates (clazz_id bigint not null, course_ability_rate_id integer not null);
create table edu.clazzes_tags (clazz_id bigint not null, clazz_tag_id integer not null);
create table edu.clazzes_teachers (clazz_id bigint not null, teacher_id bigint not null, idx integer not null);
create table edu.course_audit_results (course_id bigint not null, passed boolean not null, remark varchar(50), scores varchar(50) not null, terms integer not null, compulsory boolean not null, group_result_id bigint not null, id bigint not null);
create table edu.course_grade_states (updated_at timestamptz not null, clazz_id bigint not null, grading_mode_id integer not null, inputer_id bigint, score_precision integer not null, id bigint not null, status integer not null, operator varchar(100) not null);
create table edu.course_grades (semester_id integer not null, course_id bigint not null, course_type_id integer not null, project_id integer not null, score float4, id bigint not null, remark varchar(200), crn varchar(20) not null, gp float4, score_text varchar(5), free_listening boolean not null, updated_at timestamptz not null, clazz_id bigint, passed boolean not null, std_id bigint not null, exam_mode_id integer not null, operator varchar(100), status integer not null, grading_mode_id integer not null, created_at timestamptz not null, course_take_type_id integer not null);
create table edu.course_profiles (website varchar(255), course_id bigint not null, materials varchar(255), description varchar(40000) not null, textbooks varchar(255), id bigint not null, prerequisites varchar(255), updated_by_id bigint, en_description varchar(40000), majors varchar(255), updated_at timestamptz not null);
create table edu.course_takers (updated_at timestamptz not null, course_id bigint not null, course_type_id integer not null, clazz_id bigint not null, std_id bigint not null, alternative boolean not null, id bigint not null, take_type_id integer not null, free_listening boolean not null, subclazz_id bigint, semester_id integer not null, election_mode_id integer not null, remark varchar(100));
create table edu.exam_activities (semester_id integer not null, centralized boolean, task_id bigint, exam_type_id integer not null, begin_at smallint not null, remark varchar(100), exam_on date, end_at smallint not null, clazz_id bigint not null, exam_week integer, std_count integer not null, publish_state integer not null, exam_paper_no varchar(255), id bigint not null);
create table edu.exam_activities_rooms (exam_activity_id bigint not null, exam_room_id bigint not null);
create table edu.exam_grade_states (updated_at timestamptz not null, grade_state_id bigint not null, id bigint not null, remark varchar(255), grading_mode_id integer not null, score_percent smallint, grade_type_id integer not null, status integer not null, operator varchar(100) not null);
create table edu.exam_grades (updated_at timestamptz not null, exam_status_id integer not null, score float4, passed boolean not null, id bigint not null, score_percent smallint, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, created_at timestamptz not null, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu.exam_groups (semester_id integer not null, exam_type_id integer not null, id bigint not null, begin_on date not null, alloc_setting_id bigint not null, max_course_conflict_ratio float4 not null, min_course_conflict_count integer not null, end_on date not null, name varchar(255) not null, updated_at timestamptz not null, allow_in_class boolean not null, project_id integer not null, publish_state integer not null);
create table edu.exam_groups_rooms (exam_group_id bigint not null, classroom_id bigint not null);
create table edu.exam_notices (semester_id integer not null, project_id integer not null, exam_type_id integer not null, id bigint not null, student_notice varchar(1000) not null, manager_notice varchar(1000) not null);
create table edu.exam_room_groups (project_id integer not null, id bigint not null, name varchar(255) not null, updated_at timestamptz not null);
create table edu.exam_room_groups_rooms (exam_room_group_id bigint not null, classroom_id bigint not null);
create table edu.exam_rooms (semester_id integer not null, exam_type_id integer not null, std_count integer not null, id bigint not null, teach_depart_id integer not null, end_at smallint not null, begin_at smallint not null, exam_on date not null, room_id bigint not null);
create table edu.exam_takers (semester_id integer not null, exam_status_id integer not null, clazz_id bigint not null, exam_type_id integer not null, exam_room_id bigint, std_id bigint not null, id bigint not null, remark varchar(255), seat_no smallint not null, activity_id bigint);
create table edu.exam_tasks (semester_id integer not null, duration smallint not null, centralized boolean not null, exam_week smallint, project_id integer not null, room_type_id integer, min_exam_on date, code varchar(255) not null, id bigint not null, max_course_conflict_ratio float4, exam_on date, group_id bigint, end_at smallint not null, exam_type_id integer not null, room_group_id bigint, begin_at smallint not null, time_allotted boolean not null, building_id integer, std_count integer not null, teach_depart_id integer not null, remark varchar(255));
create table edu.exam_tasks_rooms (exam_task_id bigint not null, classroom_id bigint not null);
create table edu.exam_turns (begin_at smallint not null, id bigint not null, exam_on date not null, group_id bigint not null, capacity integer, end_at smallint not null);
create table edu.exch_exempt_applies (exemption_credits float4 not null, updated_at timestamptz not null, credits float4 not null, id bigint not null, status integer not null, extern_student_id bigint not null, audit_opinion varchar(255), transcript_path varchar(255));
create table edu.exch_exempt_credits (updated_at timestamptz not null, std_id bigint not null, id bigint not null, remark varchar(255), exempted float4 not null, max_value float4 not null);
create table edu.execution_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(40) not null, terms integer not null, plan_id bigint not null, hour_ratios varchar(255), parent_id bigint, given_name varchar(100), credit_hours integer not null, credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu.execution_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu.execution_plans (program_id bigint not null, updated_at timestamptz not null, credits float4 not null, department_id integer not null, id bigint not null, end_term smallint not null, remark varchar(200), std_type_id integer, campus_id integer, begin_on date not null, status integer not null, end_on date not null, start_term smallint not null);
create table edu.extern_grades (updated_at timestamptz not null, acquired_on date not null, credits float4 not null, id bigint not null, remark varchar(255), status integer not null, extern_student_id bigint not null, course_name varchar(400) not null, score_text varchar(20) not null);
create table edu.extern_grades_exempts (extern_grade_id bigint not null, course_id bigint not null);
create table edu.final_makeup_courses (semester_id integer not null, course_id bigint not null, teacher_id bigint, project_id integer not null, std_count integer not null, input_at timestamptz, status integer not null, crn varchar(255) not null, depart_id integer not null, id bigint not null);
create table edu.final_makeup_courses_squads (final_makeup_course_id bigint not null, squad_id bigint not null);
create table edu.final_makeup_takers (updated_at timestamptz not null, course_type_id integer not null, makeup_course_id bigint not null, std_id bigint not null, id bigint not null, remark varchar(255), scores varchar(255) not null);
create table edu.ga_grade_states (updated_at timestamptz not null, grade_state_id bigint not null, id bigint not null, remark varchar(50), grading_mode_id integer not null, grade_type_id integer not null, status integer not null, operator varchar(100) not null);
create table edu.ga_grades (updated_at timestamptz not null, score float4, passed boolean not null, id bigint not null, remark varchar(255), gp float4, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, delta float4, created_at timestamptz not null, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu.group_audit_results (name varchar(100) not null, course_type_id integer not null, id bigint not null, remark varchar(255), indexno varchar(255) not null, parent_id bigint, required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, passed boolean not null, sub_count smallint not null, plan_result_id bigint not null);
create table edu.invigilation_clazz_quotas (teacher_id bigint not null, clazz_id bigint not null, credit_hours float4 not null, amount float4 not null, id bigint not null, ratio float4 not null);
create table edu.invigilation_quota_details (quota_id bigint not null, amount float4 not null, id bigint not null, depart_id integer not null, campus_id integer not null);
create table edu.invigilation_quotas (semester_id integer not null, project_id integer not null, remark varchar(255), invigilator_id bigint not null, amount integer not null, id bigint not null);
create table edu.invigilation_quotas_excludes (invigilation_quota_id bigint not null, exclude_on date not null);
create table edu.invigilations (chief boolean not null, invigilator_name varchar(255), updated_at timestamptz not null, department_id integer not null, id bigint not null, invigilator_id bigint, published boolean not null, exam_room_id bigint not null);
create table edu.lessons (subclazz_id bigint, contents varchar(500) not null, id bigint not null, teaching_method_id integer not null, teaching_nature_id integer not null, idx integer not null, places varchar(255), plan_id bigint not null, end_at smallint not null, begin_at smallint not null, open_on date not null, units varchar(255) not null);
create table edu.lessons_rooms (lesson_id bigint not null, classroom_id bigint not null);
create table edu.lessons_teachers (lesson_id bigint not null, teacher_id bigint not null);
create table edu.major_alt_courses (updated_at timestamptz not null, project_id integer not null, to_grade_id bigint not null, direction_id bigint, department_id integer, id bigint not null, remark varchar(255), from_grade_id bigint not null, std_type_id integer, major_id bigint);
create table edu.major_alt_courses_news (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu.major_alt_courses_olds (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu.major_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(40) not null, terms integer not null, plan_id bigint not null, hour_ratios varchar(255), parent_id bigint, given_name varchar(100), credit_hours integer not null, credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu.major_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu.major_plans (program_id bigint not null, updated_at timestamptz not null, credits float4 not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, status integer not null, end_on date not null, start_term smallint not null);
create table edu.materials (submit_at timestamptz, passed boolean, adoption integer not null, id bigint not null, remark varchar(200), clazz_id bigint not null, materials varchar(255), ordered boolean not null);
create table edu.materials_books (material_id bigint not null, textbook_id bigint not null);
create table edu.moral_grades (semester_id integer not null, score float4, passed boolean not null, std_id bigint not null, id bigint not null, grading_mode_id integer not null, score_text varchar(255) not null, operator varchar(255) not null, status integer not null);
create table edu.occupancies (updated_at timestamptz not null, activity_id bigint not null, app_id bigint not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, room_id bigint not null, comments varchar(300) not null, activity_type_id integer not null, id bigint not null);
create table edu.plan_audit_results (required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, updated_at timestamptz not null, archived boolean not null, passed boolean not null, std_id bigint not null, id bigint not null, updates varchar(500), remark varchar(100));
create table edu.program_doc_metas (name varchar(255) not null, id integer not null, indexno varchar(255) not null, template_id integer not null, maxlength integer not null);
create table edu.program_doc_sections (name varchar(255) not null, doc_id bigint not null, contents text not null, id bigint not null, indexno varchar(255) not null, parent_id bigint);
create table edu.program_doc_templates (project_id integer not null, doc_locale varchar(255) not null, department_id integer, id integer not null, begin_on date not null, end_on date, edu_type_id integer not null, level_id integer not null, name varchar(255) not null, updated_at timestamptz not null);
create table edu.program_doc_templates_types (program_doc_template_id integer not null, std_type_id integer not null);
create table edu.program_docs (updated_at timestamptz not null, doc_locale varchar(255) not null, id bigint not null, program_id bigint not null);
create table edu.programs (duration float4 not null, degree_id integer, project_id integer not null, direction_id bigint, department_id integer not null, id bigint not null, std_type_id integer, study_type_id integer not null, degree_gpa float4, end_on date not null, major_id bigint not null, edu_type_id integer not null, level_id integer not null, name varchar(100) not null, updated_at timestamptz not null, grade_id bigint not null, remark varchar(200), begin_on date not null, status integer not null, campus_id integer, offset_type_id integer);
create table edu.programs_degree_courses (program_id bigint not null, course_id bigint not null);
create table edu.regular_grade_states (updated_at timestamptz not null, clazz_id bigint not null, excellent_rate float4 not null, id bigint not null, excellent_rate_limit float4 not null, status integer not null);
create table edu.regular_grade_states_percents (regular_grade_state_id bigint not null, value_ integer not null, regular_test_type_id integer not null);
create table edu.regular_grades (updated_at timestamptz not null, clazz_id bigint not null, score float4 not null, std_id bigint not null, id bigint not null, status integer not null);
create table edu.regular_test_grades (regular_grade_id bigint not null, score integer not null, score_percent integer not null, test_type_id integer not null, id bigint not null);
create table edu.regular_test_types (name varchar(255) not null, id integer not null);
create table edu.restriction_items (included boolean not null, contents varchar(255) not null, restriction_id bigint not null, id bigint not null, meta integer not null);
create table edu.restrictions (clazz_id bigint not null, cur_count integer not null, max_count integer not null, id bigint not null, prime boolean not null, parent_id bigint);
create table edu.room_applies (school_id integer not null, apply_at timestamptz not null, final_check_id bigint, depart_check_id bigint, id bigint not null, campus_id integer not null, require_multimedia boolean not null, unit_attendance integer not null, room_comment varchar(255), minutes integer not null, begin_on date not null, time_comment varchar(255), end_on date not null, speaker varchar(255) not null, activity_name varchar(255) not null, attendance_num integer not null, activity_type_id integer not null, attendance varchar(255) not null, approved boolean, apply_by_id bigint not null, mobile varchar(255) not null, department_id integer not null, email varchar(255), applicant varchar(255) not null);
create table edu.room_applies_rooms (room_apply_id bigint not null, classroom_id bigint not null);
create table edu.room_applies_times (room_apply_id bigint not null, weekstate bigint not null, begin_at smallint not null, start_on date not null, end_at smallint not null);
create table edu.room_apply_depart_checks (opinions varchar(100), checked_by_id bigint not null, checked_at timestamptz not null, id bigint not null, room_apply_id bigint not null, approved boolean not null);
create table edu.room_apply_final_checks (opinions varchar(100), checked_by_id bigint not null, checked_at timestamptz not null, id bigint not null, room_apply_id bigint not null, approved boolean not null);
create table edu.room_available_times (updated_at timestamptz not null, project_id integer not null, id bigint not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, room_id bigint not null);
create table edu.room_occupy_apps (activity_url varchar(200) not null, name varchar(200) not null, id bigint not null);
create table edu.sessions (subclazz_id bigint, clazz_id bigint not null, id bigint not null, teaching_method_id integer not null, teaching_nature_id integer not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, places varchar(200));
create table edu.sessions_rooms (session_id bigint not null, classroom_id bigint not null);
create table edu.sessions_teachers (session_id bigint not null, teacher_id bigint not null);
create table edu.share_course_groups (course_type_id integer not null, id bigint not null, language_id integer, plan_id bigint not null, parent_id bigint, course_ability_rate_id integer, indexno varchar(255) not null);
create table edu.share_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null);
create table edu.share_plans (project_id integer not null, to_grade_id bigint not null, id bigint not null, remark varchar(200), end_on date, level_id integer not null, name varchar(255) not null, updated_at timestamptz not null, from_grade_id bigint not null, begin_on date not null, edu_type_id integer not null);
create table edu.std_alt_courses (updated_at timestamptz not null, std_id bigint not null, id bigint not null, remark varchar(255));
create table edu.std_alt_courses_news (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu.std_alt_courses_olds (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu.std_book_orders (semester_id integer not null, course_id bigint not null, std_id bigint not null, id bigint not null, teach_depart_id integer not null, teacher_names varchar(255), crn varchar(255) not null, created_at timestamptz not null, textbook_id bigint not null, withdraw_at timestamptz, withdrawed boolean not null, project_id integer not null);
create table edu.std_course_abilities (rate_id integer not null, updated_at timestamptz not null, score float4, std_id bigint not null, id bigint not null);
create table edu.std_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(255) not null, terms integer not null, plan_id bigint not null, hour_ratios varchar(255), parent_id bigint, given_name varchar(255), credit_hours integer not null, credits float4 not null, sub_count smallint not null, indexno varchar(20) not null, remark varchar(200));
create table edu.std_gpas (updated_at timestamptz not null, gpa float4 not null, credits float4 not null, std_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null, project_id integer not null, ga float4 not null);
create table edu.std_plan_courses (course_id bigint not null, id bigint not null, terms integer not null, compulsory boolean not null, group_id bigint not null, remark varchar(200));
create table edu.std_plans (program_id bigint not null, updated_at timestamptz not null, credits float4 not null, std_id bigint not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, status integer not null, end_on date not null, start_term smallint not null);
create table edu.std_semester_gpas (semester_id integer not null, ga float4 not null, gpa float4 not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null);
create table edu.std_year_gpas (ga float4 not null, gpa float4 not null, school_year varchar(255) not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null);
create table edu.subclazzes (name varchar(100) not null, clazz_id bigint not null, cur_count integer not null, max_count integer not null, id bigint not null);
create table edu.syllabus_files (doc_locale varchar(255) not null, mime_type varchar(255) not null, id bigint not null, file_size integer not null, file_path varchar(255) not null, syllabus_id bigint not null);
create table edu.syllabuses (semester_id integer not null, author_id bigint not null, updated_at timestamptz not null, course_id bigint not null, audit_at timestamptz, department_id integer not null, id bigint not null, teaching_office_id bigint, end_on date not null, auditor_id bigint, begin_on date not null, status integer not null);
create table edu.teaching_plans (semester_id integer not null, author_id bigint, updated_at timestamptz not null, clazz_id bigint not null, audit_at timestamptz, passed boolean, doc_locale varchar(255) not null, mime_type varchar(255), id bigint not null, file_path varchar(255), auditor_id bigint, file_size integer not null);
create table edu.term_campuses (program_id bigint not null, id bigint not null, terms integer not null, campus_id integer not null);
create table hr.cfg_capacity_factors (name varchar(255) not null, id bigint not null, remark varchar(255), begin_on date not null, end_on date, condition_exp varchar(255) not null);
create table hr.cfg_factor_segments (max_capacity integer not null, factor_exp varchar(255) not null, factor_id bigint not null, min_capacity integer not null, id bigint not null);
create table hr.teacher_profiles (harvest varchar(40000), updated_at timestamptz not null, research varchar(255), career varchar(1000), titles varchar(1000), id bigint not null, intro varchar(40000) not null, staff_id bigint not null, contact varchar(255));
create table hr.teaching_loads (semester_id integer not null, teacher_title_id integer not null, course_id bigint not null, teacher_id bigint not null, capacity_factor_id bigint not null, credit_hours integer not null, std_count integer not null, factor float4 not null, load_hours float4 not null, id bigint not null, clazz_tags varchar(255) not null, crn varchar(255) not null);
create table hr.title_infoes (id bigint not null, begin_on date not null, staff_id bigint not null, title_id integer not null, end_on date);
create table log.spa_download_logs (id bigint not null, remark varchar(255), user_id bigint not null, doc_type_id integer not null, ip varchar(255) not null, updated_at timestamptz not null);
create table log.spa_print_logs (payed integer not null, id bigint not null, remark varchar(255), user_id bigint not null, doc_type_id integer not null, ip varchar(255) not null, updated_at timestamptz not null);
create table log.std_transfer_apply_logs (ip varchar(255) not null, operate_at timestamptz not null, std_id bigint not null, contents varchar(255) not null, id bigint not null, operation varchar(255) not null);
create table prac.inv_batches (name varchar(255) not null, archived boolean not null, id integer not null, begin_on date not null, end_on date not null, school_id integer not null);
create table prac.inv_closure_review_details (review_id bigint not null, updated_at timestamptz not null, score float4, expert_id bigint not null, submited boolean not null, id bigint not null, comments varchar(600), level_id integer);
create table prac.inv_closure_review_groups (name varchar(255) not null, discipline_id integer not null, batch_id integer not null, id bigint not null);
create table prac.inv_closure_review_groups_experts (closure_review_group_id bigint not null, expert_id bigint not null);
create table prac.inv_closure_reviews (project_id bigint not null, score float4, id bigint not null, group_id bigint);
create table prac.inv_closures (updated_at timestamptz not null, reply_score integer, exemption_confirmed boolean, id bigint not null, apply_reject_comment varchar(255), apply_exemption_reply boolean not null, exemption_reason varchar(200), project_id bigint not null);
create table prac.inv_experts (name varchar(50) not null, code varchar(20) not null, id bigint not null, begin_on date not null, intro varchar(300), end_on date not null, password varchar(255) not null);
create table prac.inv_init_review_details (review_id bigint not null, updated_at timestamptz not null, score float4, passed boolean, expert_id bigint not null, submited boolean not null, id bigint not null, comments varchar(600));
create table prac.inv_init_review_groups (name varchar(255) not null, discipline_id integer not null, batch_id integer not null, id bigint not null);
create table prac.inv_init_review_groups_experts (init_review_group_id bigint not null, expert_id bigint not null);
create table prac.inv_init_reviews (project_id bigint not null, score float4, id bigint not null, group_id bigint);
create table prac.inv_introes (project_id bigint not null, innovations varchar(300) not null, products varchar(300) not null, summaries varchar(500) not null, id bigint not null);
create table prac.inv_level_jounals (updated_at timestamptz not null, project_id bigint not null, id bigint not null, award_year integer not null, level_id integer not null);
create table prac.inv_materials (updated_at timestamptz not null, project_id bigint not null, file_name varchar(200) not null, id bigint not null, file_size integer not null, stage_type_id integer not null, sha varchar(255) not null, file_path varchar(255) not null);
create table prac.inv_members (duty varchar(255) not null, email varchar(255), project_id bigint not null, std_id bigint not null, id bigint not null, hobby varchar(255), remark varchar(255), phone varchar(255) not null);
create table prac.inv_project_categories (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.inv_project_levels (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.inv_project_states (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.inv_projects (code varchar(255), remark varchar(255), intro_id bigint, title varchar(255) not null, end_on date, level_id integer not null, state_id integer not null, department_id integer not null, batch_id integer not null, id bigint not null, begin_on date not null, manager_id bigint, discipline_id integer not null, category_id integer not null, funds integer not null);
create table prac.inv_projects_instructors (project_id bigint not null, teacher_id bigint not null, idx integer not null);
create table prac.inv_stage_types (name varchar(255) not null, code varchar(255) not null, id integer not null, end_on date, parent_id integer, begin_on date not null, indexno varchar(255) not null);
create table prac.inv_stages (begin_at timestamptz not null, notice_href varchar(255), remark varchar(255), stage_type_id integer not null, end_at timestamptz not null, batch_id integer not null, id integer not null);
create table qos.category_eval_stats (semester_id integer not null, updated_at timestamptz not null, project_id integer not null, course_count integer not null, id bigint not null, category_id integer not null);
create table qos.category_stat_grades (max_score float8 not null, avg_score float8 not null, stat_id bigint not null, course_count integer not null, min_score float8 not null, id bigint not null, grade_id integer not null, indicator_id bigint not null);
create table qos.category_stat_ranges (from_score float8 not null, stat_id bigint not null, course_count integer not null, id bigint not null, to_score float8 not null, indicator_id bigint not null);
create table qos.cfg_assess_criterias (name varchar(100) not null, project_id integer not null, id bigint not null, begin_on date not null, end_on date);
create table qos.cfg_assess_grades (name varchar(255) not null, max_score float4 not null, min_score float4 not null, id integer not null, grade integer not null, description varchar(255) not null, criteria_id bigint not null);
create table qos.cfg_indicators (project_id integer not null, en_name varchar(100), code varchar(255) not null, id bigint not null, remark varchar(100), begin_on date not null, end_on date, name varchar(50) not null, updated_at timestamptz not null);
create table qos.cfg_option_groups (name varchar(50) not null, project_id integer not null, id bigint not null);
create table qos.cfg_options (name varchar(50) not null, proportion float4 not null, id bigint not null, group_id bigint not null);
create table qos.cfg_questionnaires (updated_at timestamptz not null, project_id integer not null, description varchar(500) not null, id bigint not null, begin_on date not null, title varchar(200) not null, end_on date, remark varchar(200));
create table qos.cfg_questionnaires_questions (questionnaire_id bigint not null, question_id bigint not null);
create table qos.cfg_questions (project_id integer not null, score float4 not null, contents varchar(400) not null, begin_on date not null, option_group_id bigint not null, end_on date, indicator_id bigint not null, updated_at timestamptz not null, priority integer not null, addition boolean not null, id bigint not null);
create table qos.course_eval_stats (course_id bigint not null, teacher_id bigint not null, project_id integer not null, tickets integer not null, score float4 not null, category_rank integer not null, crn varchar(255), category_id integer not null, teacher_depart_id integer not null, semester_id integer not null, school_rank integer not null, updated_at timestamptz not null, depart_rank integer not null, publish_status integer not null, id bigint not null, grade_id integer not null, teach_depart_id integer not null);
create table qos.course_indicator_stats (category_rank integer not null, id bigint not null, grade_id integer not null, indicator_id bigint not null, stat_id bigint not null, score float8 not null);
create table qos.course_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table qos.course_question_stats (question_id bigint not null, id bigint not null, stat_id bigint not null, score float8 not null);
create table qos.depart_eval_stats (semester_id integer not null, updated_at timestamptz not null, course_count integer not null, department_id integer not null, id bigint not null, avg_score float8 not null, project_id integer not null);
create table qos.evaluate_results (updated_at timestamptz not null, student_id bigint not null, teacher_id bigint not null, clazz_id bigint not null, score float4 not null, department_id integer not null, id bigint not null, questionnaire_id bigint not null, stat_type integer not null);
create table qos.feedbacks (semester_id integer not null, updated_at timestamptz not null, course_id bigint not null, teacher_id bigint not null, std_id bigint not null, contents varchar(500) not null, id bigint not null, crn varchar(255) not null, grade varchar(255) not null, teach_depart_id integer not null);
create table qos.final_comments (semester_id integer not null, updated_at timestamptz not null, course_id bigint not null, teacher_id bigint not null, std_id bigint not null, contents varchar(500) not null, id bigint not null, crn varchar(255) not null, grade varchar(255) not null, teach_depart_id integer not null);
create table qos.final_teacher_scores (semester_id integer not null, school_rank integer not null, teacher_id bigint not null, score float4 not null, supvi_score float4 not null, id bigint not null, std_score float4 not null, depart_score float4 not null, depart_rank integer not null);
create table qos.question_results (question_id bigint not null, result_id bigint not null, id bigint not null, indicator_id bigint not null, score float4 not null, option_id bigint not null);
create table qos.questionnaire_clazzes (clazz_id bigint not null, id bigint not null, evaluate_by_teacher boolean not null, questionnaire_id bigint not null);
create table qos.school_eval_stats (semester_id integer not null, updated_at timestamptz not null, course_count integer not null, id bigint not null, avg_score float8 not null, project_id integer not null);
create table spa.cfg_coupons (id integer not null, begin_on date not null, end_on date not null, doc_type_id integer not null, count_per_std integer not null, updated_at timestamptz not null);
create table spa.cfg_doc_types (name varchar(255) not null, page_size integer not null, url varchar(255) not null, enable_user_password boolean not null, enabled boolean not null, code varchar(255) not null, id integer not null, notice varchar(3000), downloadable boolean not null, orientation integer not null, admin_url varchar(255));
create table spa.cfg_print_configs (max_limit integer not null, updated_at timestamptz not null, price integer not null, id integer not null, begin_on date not null, end_on date, doc_type_id integer not null);
create table spa.print_quotas (frees integer not null, print_cnt integer not null, free_cnt integer not null, user_id bigint not null, doc_type_id integer not null, last_print_at timestamptz not null, id bigint not null);
create table std.bills (semester_id integer not null, updated_at timestamptz not null, payed integer not null, pay_at timestamptz, std_id bigint not null, amount integer not null, id bigint not null, remark varchar(255), created_at timestamptz not null, fee_type_id integer not null, depart_id integer not null, updated_by varchar(255) not null);
create table std.cfg_transfer_options (exam_addr varchar(255), written_content varchar(255), audition_content varchar(255), audition_percent integer not null, contact_info varchar(255), direction_id bigint, consult_addr varchar(255), consult_on date, id bigint not null, remark varchar(255), plan_count integer not null, depart_id integer not null, major_id bigint not null, written_percent integer not null, scheme_id bigint not null, manager_id bigint, current_count integer not null, exam_on date);
create table std.cfg_transfer_schemes (semester_id integer not null, notice_path varchar(255), project_id integer not null, published boolean not null, edit_end_at timestamptz not null, id bigint not null, apply_begin_at timestamptz not null, grade_id bigint not null, audit_end_at timestamptz, edit_begin_at timestamptz not null, apply_end_at timestamptz not null, audit_begin_at timestamptz, name varchar(255) not null, updated_at timestamptz not null);
create table std.cfg_transfer_scopes (included boolean not null, id bigint not null, scheme_id bigint not null);
create table std.cfg_transfer_scopes_grades (transfer_scope_id bigint not null, value_ varchar(255) not null);
create table std.cfg_transfer_scopes_majors (transfer_scope_id bigint not null, major_id bigint not null);
create table std.cfg_tuition_configs (duration float4 not null, project_id integer not null, to_grade_id bigint not null, direction_id bigint, amount integer not null, department_id integer, id integer not null, remark varchar(255), from_grade_id bigint not null, fee_type_id integer not null, major_id bigint, level_id integer not null);
create table std.contacts (updated_at timestamptz not null, email varchar(100), std_id bigint not null, id bigint not null, address varchar(150), mobile varchar(20), phone varchar(20));
create table std.degree_applies (updated_at timestamptz not null, degree_id integer not null, gpa float4 not null, passed boolean, std_id bigint not null, batch_id bigint not null, id bigint not null);
create table std.degree_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table std.degree_results (updated_at timestamptz not null, degree_id integer, gpa float4 not null, published boolean not null, passed boolean not null, degree_comments varchar(500), foreign_lang_passed_on date, ga float4 not null, locked boolean not null, std_id bigint not null, batch_id bigint not null, id bigint not null);
create table std.edu_work_records (organization varchar(200) not null, duty varchar(100), std_id bigint not null, id bigint not null, remark varchar(100), begin_on date not null, end_on date not null);
create table std.examinees (letter_no varchar(30), score float4, id bigint not null, scores varchar(255), education_mode_id integer, major_id bigint, updated_at timestamptz not null, enroll_mode_id integer, school_name varchar(200), std_id bigint not null, origin_division_id integer, exam_no varchar(30), code varchar(30) not null, graduate_on date, client varchar(255));
create table std.exchange_programs (name varchar(255) not null, project_id integer not null, id bigint not null, begin_on date not null, end_on date);
create table std.exchange_programs_schools (exchange_program_id bigint not null, extern_school_id integer not null);
create table std.freshmen (duration float4 not null, name varchar(60) not null, project_id integer not null, direction_id bigint, country_id integer, code varchar(20) not null, department_id integer not null, id bigint not null, join_cpc_on date, std_type_id integer not null, birthplace varchar(100), education_mode_id integer, edu_type_id integer not null, birthday date, id_type_id integer not null, organization varchar(100), email varchar(100), study_on date not null, home_town varchar(100), nation_id integer, id_code varchar(20) not null, join_cyl_on date, last_edu_degree_id integer, political_status_id integer, dormitory_no varchar(20), squad_id bigint, grade_id bigint not null, study_type_id integer not null, marital_status_id integer, major_id bigint not null, tutor_id bigint, phone varchar(20), gender_id integer not null, level_id integer not null);
create table std.graduate_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table std.graduate_batches (project_id integer not null, id bigint not null, graduate_on date not null, degree_offered boolean not null, name varchar(100) not null, updated_at timestamptz not null, season_id bigint not null);
create table std.graduate_results (elected_credits float4 not null, updated_at timestamptz not null, required_credits float4 not null, batch_no integer not null, published boolean not null, passed boolean, education_result_id integer, acquired_credits float4 not null, graduate_comments varchar(500), locked boolean not null, std_id bigint not null, batch_id bigint not null, id bigint not null);
create table std.homes (updated_at timestamptz not null, police varchar(150), postcode varchar(20), railway_station_id integer, std_id bigint not null, former_addr varchar(100), id bigint not null, phone varchar(20), police_phone varchar(20), address varchar(150));
create table std.honor_awards (semester_id integer not null, std_id bigint not null, amount integer not null, id bigint not null, category_id integer not null, approved boolean not null, level_id integer not null);
create table std.honor_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, assess_period varchar(255) not null, code varchar(255) not null, id integer not null, rated boolean not null, discription varchar(255), honor_type_id integer not null);
create table std.honor_levels (name varchar(255) not null, enabled boolean not null, amount integer not null, code varchar(255) not null, id integer not null, category_id integer not null, discription varchar(255));
create table std.honor_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, idx varchar(255) not null);
create table std.major_students (school_id integer not null, updated_at timestamptz not null, major_name varchar(255) not null, major_category_id integer not null, code varchar(255) not null, id bigint not null, std_id bigint not null, en_major_name varchar(255));
create table std.orders (pay_at timestamptz, std_id bigint not null, amount integer not null, code varchar(50) not null unique, id bigint not null, bill_id bigint not null, status varchar(255) not null, created_at timestamptz not null, pay_url varchar(500) not null, expired_at timestamptz not null, channel varchar(255), invoice_path varchar(255), remark varchar(255), paid boolean not null);
create table std.punishments (semester_id integer not null, name varchar(255) not null, withdraw_on date, issue_on date not null, std_id bigint not null, publishment_type_id integer not null, id bigint not null, remark varchar(255), depart_id integer not null, doc_seq varchar(255) not null, reason varchar(255));
create table std.registers (checkin boolean, registered boolean, operate_ip varchar(100) not null, std_id bigint not null, register_at timestamptz, id bigint not null, remark varchar(50), unregistered_reason_id integer, operate_by varchar(50) not null, tuition_paid boolean, uncheckin_reason_id integer, semester_id integer not null);
create table std.scholarship_awards (semester_id integer not null, std_id bigint not null, amount integer not null, id bigint not null, category_id integer not null, approved boolean not null, level_id integer not null);
create table std.scholarship_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, assess_period varchar(255) not null, code varchar(255) not null, id integer not null, scholarship_type_id integer not null, begin_on date not null, rated boolean not null, end_on date, discription varchar(255));
create table std.scholarship_levels (name varchar(255) not null, enabled boolean not null, amount integer not null, code varchar(255) not null, id integer not null, category_id integer not null, discription varchar(255));
create table std.scholarship_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, idx varchar(255) not null);
create table std.social_relations (id_type_id integer, duty varchar(400), name varchar(255) not null, std_id bigint not null, idcard varchar(255), phone varchar(255), relationship_id integer not null, id bigint not null);
create table std.std_alteration_items (alteration_id bigint not null, oldtext varchar(255), oldvalue varchar(100), newtext varchar(255), newvalue varchar(255), id bigint not null, meta integer not null);
create table std.std_alterations (semester_id integer not null, updated_at timestamptz not null, effective boolean not null, std_id bigint not null, code varchar(255) not null, id bigint not null, remark varchar(255), begin_on date not null, alter_type_id integer not null, end_on date not null, reason_id integer);
create table std.stipend_awards (semester_id integer not null, std_id bigint not null, amount integer not null, id bigint not null, category_id integer not null, approved boolean not null, level_id integer not null);
create table std.stipend_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, assess_period varchar(255) not null, code varchar(255) not null, id integer not null, begin_on date not null, rated boolean not null, end_on date, discription varchar(255));
create table std.stipend_levels (name varchar(255) not null, enabled boolean not null, amount integer not null, code varchar(255) not null, id integer not null, category_id integer not null, discription varchar(255));
create table std.subsidy_awards (semester_id integer not null, std_id bigint not null, amount integer not null, id bigint not null, category_id integer not null, approved boolean not null, level_id integer not null);
create table std.subsidy_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, assess_period varchar(255) not null, code varchar(255) not null, id integer not null, rated boolean not null, discription varchar(255));
create table std.subsidy_levels (name varchar(255) not null, enabled boolean not null, amount integer not null, code varchar(255) not null, id integer not null, category_id integer not null, discription varchar(255));
create table std.transfer_applies (to_direction_id bigint, updated_at timestamptz not null, to_squad_id bigint, to_major_id bigint not null, email varchar(255) not null, from_major_id bigint not null, adjustable boolean not null, id bigint not null, other_gpa float4 not null, mobile varchar(255) not null, depart_opinion varchar(255), to_grade varchar(255), gpa float4 not null, score float4, option_id bigint not null, written_score float4, passed boolean, audition_score float4, from_squad_id bigint, from_direction_id bigint, std_id bigint not null, to_depart_id integer not null, from_depart_id integer not null, reason varchar(255) not null, from_grade_id bigint not null, transfer_gpa float4 not null, status integer not null, major_gpa float4 not null);
create table trd.c_rd_achievement_types (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table trd.c_rd_award_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table trd.c_rd_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table trd.c_rd_project_categories (id integer not null, begin_on date not null, for_course boolean not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table trd.c_rd_project_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamptz not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table trd.rd_achievement_awards (name varchar(255) not null, award_on date, id bigint not null, grade_id integer not null, award_year integer not null, achievement_id bigint not null, level_id integer not null, award_by varchar(255) not null);
create table trd.rd_achievement_members (name varchar(255) not null, id bigint not null, idx integer not null, user_id bigint, achievement_id bigint not null);
create table trd.rd_achievements (org_name varchar(255) not null, website varchar(255), code varchar(255) not null, id bigint not null, achievement_type_id integer not null, begin_on date not null, end_on date not null, category_code varchar(255), name varchar(255) not null, updated_at timestamptz not null);
create table trd.rd_project_members (name varchar(255) not null, project_id bigint not null, id bigint not null, idx integer not null, user_id bigint);
create table trd.rd_projects (code varchar(255) not null, department_id integer not null, id bigint not null, finished_on date, category_id integer not null, for_course boolean not null, end_on date not null, level_id integer not null, name varchar(255) not null, updated_at timestamptz not null, remark varchar(255), begin_on date not null, status_id integer not null, funds integer not null);
create table trd.rd_projects_leaders (rd_project_id bigint not null, user_id bigint not null);
create table trd.teaching_team_members (id bigint not null, team_id bigint not null, idx integer not null, user_id bigint not null);
create table trd.teaching_teams (award_title varchar(255), code varchar(255) not null, department_id integer not null, id bigint not null, begin_on date not null, level_id integer not null, name varchar(255) not null, updated_at timestamptz not null, remark varchar(255));
create table trd.teaching_teams_leaders (teaching_team_id bigint not null, user_id bigint not null);
create table trd.textbook_achievements (updated_at timestamptz not null, textbook_id bigint not null, id bigint not null);
create table trd.textbook_awards (name varchar(255) not null, award_on date, id bigint not null, grade_id integer, level_id integer not null, achievement_id bigint not null);
create table trd.textbook_editors (chief boolean not null, name varchar(255) not null, id bigint not null, idx integer not null, user_id bigint, achievement_id bigint not null);
