create table base.book_award_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.book_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.buildings (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, campus_id integer not null, building_type_id integer, name varchar(80) not null, updated_at timestamp not null);
create table base.calendar_stages (school_id integer not null, name varchar(100) not null, vacation boolean not null, id integer not null);
create table base.calendars (school_id integer not null, code varchar(10) not null, id integer not null, begin_on date not null, end_on date, first_weekday integer not null, name varchar(80) not null, updated_at timestamp not null);
create table base.campuses (school_id integer not null, en_name varchar(100), code varchar(10) not null, id integer not null, remark varchar(200), begin_on date not null, short_name varchar(100), end_on date, name varchar(80) not null, updated_at timestamp not null);
create table base.classrooms (en_name varchar(255), room_no varchar(20), room_type_id integer not null, building_id integer, code varchar(20) not null, begin_on date not null, floor_no integer not null, short_name varchar(255), end_on date, capacity integer not null, school_id integer not null, exam_capacity integer not null, name varchar(100) not null, updated_at timestamp not null, id bigint not null, course_capacity integer not null, campus_id integer not null);
create table base.classrooms_departs (classroom_id bigint not null, department_id integer not null);
create table base.classrooms_projects (classroom_id bigint not null, project_id integer not null);
create table base.course_ability_rates (rate integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.course_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.course_hour_types (id integer not null, begin_on date not null, category integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.course_hours (course_id bigint not null, weeks integer not null, credit_hours integer not null, id bigint not null, hour_type_id integer not null);
create table base.course_types (optional boolean not null, practical boolean not null, id integer not null, begin_on date not null, end_on date, major boolean not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.course_units (name varchar(20) not null, setting_id integer not null, en_name varchar(30) not null, begin_at smallint not null, id integer not null, indexno integer not null, part_id integer not null, end_at smallint not null);
create table base.courses (course_type_id integer not null, code varchar(32) not null, remark varchar(500), begin_on date not null, end_on date, name varchar(222) not null, updated_at timestamp not null, teaching_group_id bigint, weeks integer not null, project_id integer not null, en_name varchar(300), credit_hours integer not null, credits float4 not null, has_makeup boolean not null, exam_mode_id integer not null, department_id integer not null, practical boolean not null, id bigint not null, calgp boolean not null, week_hours integer not null, category_id integer);
create table base.courses_ability_rates (course_id bigint not null, course_ability_rate_id integer not null);
create table base.courses_grading_modes (course_id bigint not null, grading_mode_id integer not null);
create table base.courses_levels (course_id bigint not null, academic_level_id integer not null);
create table base.courses_majors (course_id bigint not null, major_id bigint not null);
create table base.courses_teachers (course_id bigint not null, teacher_id bigint not null);
create table base.courses_textbooks (course_id bigint not null, textbook_id bigint not null);
create table base.courses_xmajors (course_id bigint not null, major_id bigint not null);
create table base.department_categories (id integer not null, end_on date, parent_id integer, updated_at timestamp not null, begin_on date not null, indexno varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.departments (research boolean not null, en_name varchar(100), teaching boolean not null, code varchar(10) not null, id integer not null, remark varchar(200), category_id integer, short_name varchar(100), end_on date, school_id integer not null, parent_id integer, name varchar(80) not null, updated_at timestamp not null, begin_on date not null, indexno varchar(20) not null);
create table base.departments_campuses (department_id integer not null, campus_id integer not null);
create table base.direction_journals (direction_id bigint not null, id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, level_id integer not null);
create table base.directions (project_id integer not null, en_name varchar(255), code varchar(32) not null, id bigint not null, remark varchar(200), begin_on date not null, end_on date, major_id bigint not null, name varchar(100) not null, updated_at timestamp not null);
create table base.instructors (school_id integer not null, updated_at timestamp not null, id bigint not null, begin_on date not null, end_on date, user_id bigint not null);
create table base.major_disciplines (discipline_code varchar(50), id bigint not null, begin_on date not null, category_id integer not null, end_on date, major_id bigint not null);
create table base.major_journals (id bigint not null, remark varchar(200), begin_on date not null, depart_id integer not null, end_on date, major_id bigint not null, level_id integer not null);
create table base.majors (en_name varchar(150), code varchar(20) not null, id bigint not null, begin_on date not null, short_name varchar(255), end_on date, name varchar(50) not null, updated_at timestamp not null, project_id integer not null, remark varchar(100));
create table base.people (phonetic_name varchar(100), political_status_id integer, country_id integer, compatriot_type_id integer, code varchar(30) not null unique, id bigint not null, language_id integer, gender_id integer not null, birthday date not null, id_type_id integer not null, family_name varchar(80), given_name varchar(80), middle_name varchar(50), formated_name varchar(100) not null, updated_at timestamp not null, home_town varchar(255), nation_id integer, birthplace varchar(255), former_name varchar(100), religion_id integer);
create table base.project_codes (project_id integer not null, code_ids varchar(2000) not null, id bigint not null, class_name varchar(100) not null);
create table base.projects (school_id integer not null, description varchar(500) not null, code varchar(10) not null unique, begin_on date not null, category_id integer not null, end_on date, minor boolean not null, name varchar(100) not null, updated_at timestamp not null, id integer not null);
create table base.projects_calendars (project_id integer not null, calendar_id integer not null);
create table base.projects_campuses (project_id integer not null, campus_id integer not null);
create table base.projects_departments (project_id integer not null, department_id integer not null, idx integer not null);
create table base.projects_levels (project_id integer not null, education_level_id integer not null);
create table base.projects_properties (project_id integer not null, value_ varchar(255) not null, name varchar(255) not null);
create table base.projects_std_labels (project_id integer not null, std_label_id integer not null);
create table base.projects_std_types (project_id integer not null, std_type_id integer not null);
create table base.rooms (school_id integer not null, room_type_id integer not null, building_id integer, code varchar(10) not null, department_id integer, id integer not null, remark varchar(200), begin_on date not null, floor_no integer not null, end_on date, campus_id integer not null, name varchar(80) not null, updated_at timestamp not null);
create table base.school_lengths (maximum float4 not null, id bigint not null, from_grade varchar(10) not null, minimum float4 not null, major_id bigint not null, level_id integer not null, to_grade varchar(10), normal float4 not null);
create table base.schools (name varchar(50) not null, institution_id integer not null, logo_url varchar(255) not null, code varchar(10) not null unique, id integer not null, begin_on date not null, short_name varchar(255), end_on date);
create table base.semester_stages (semester_id integer not null, stage_id integer not null, id integer not null, remark varchar(500), begin_on date not null, end_on date not null);
create table base.semesters (name varchar(10) not null, archived boolean not null, school_year varchar(10) not null, id integer not null, remark varchar(255), begin_on date not null, end_on date not null, calendar_id integer not null, code varchar(15) not null);
create table base.squads (project_id integer not null, en_name varchar(255), direction_id bigint, std_count integer not null, code varchar(20) not null, department_id integer not null, begin_on date not null, std_type_id integer not null, plan_count integer not null, short_name varchar(255), end_on date not null, campus_id integer not null, level_id integer not null, name varchar(100) not null, updated_at timestamp not null, instructor_id bigint, id bigint not null, grade varchar(10) not null, remark varchar(100), major_id bigint, tutor_id bigint);
create table base.std_label_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.std_labels (id integer not null, begin_on date not null, label_type_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.std_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.student_states (direction_id bigint, std_id bigint not null, id bigint not null, end_on date, campus_id integer not null, major_id bigint not null, department_id integer not null, inschool boolean not null, squad_id bigint, grade varchar(255) not null, remark varchar(200), begin_on date not null, status_id integer not null);
create table base.students (duration float4 not null, updated_at timestamp not null, project_id integer not null, id bigint not null, std_type_id integer not null, end_on date not null, registed boolean not null, level_id integer not null, study_on date not null, state_id bigint, remark varchar(200), graduate_on date not null, begin_on date not null, study_type_id integer not null, person_id bigint, tutor_id bigint, user_id bigint not null);
create table base.students_labels (student_id bigint not null, std_label_id integer not null, std_label_type_id integer not null);
create table base.teacher_types (id integer not null, external_ boolean not null, begin_on date not null, end_on date, parttime boolean not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.teachers (school_id integer not null, updated_at timestamp not null, degree_id integer, education_degree_id integer, id bigint not null, remark varchar(255), formal_hr boolean not null, person_id bigint, title_id integer, end_on date, user_id bigint not null, parttime boolean not null, teacher_type_id integer not null, retired boolean not null, begin_on date not null, status_id integer not null);
create table base.teachers_projects (teacher_id bigint not null, project_id integer not null);
create table base.teaching_groups (project_id integer not null, code varchar(255) not null, department_id integer not null, id bigint not null, begin_on date not null, director_id bigint, end_on date, name varchar(255) not null, updated_at timestamp not null);
create table base.teaching_groups_members (teaching_group_id bigint not null, user_id bigint not null);
create table base.textbooks (name varchar(300) not null, book_type_id integer, project_id integer not null, description varchar(300), edition varchar(50) not null, published_on date not null, id bigint not null, press_id integer, author varchar(80) not null, series varchar(255), award_org varchar(255), price float4, made_in_school boolean not null, remark varchar(255), begin_on date not null, isbn varchar(100), category_id integer, award_type_id integer, end_on date, translator varchar(255));
create table base.time_settings (name varchar(20) not null, project_id integer not null, minutes_per_unit smallint not null, id integer not null, begin_on date not null, end_on date, campus_id integer);
create table base.user_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table base.users (school_id integer not null, email varchar(80), code varchar(30) not null, department_id integer not null, id bigint not null, remark varchar(200), begin_on date not null, category_id integer not null, end_on date, mobile varchar(15), gender_id integer not null, name varchar(80) not null, updated_at timestamp not null, en_name varchar(255));
create table code.academic_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.activity_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.admission_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.blood_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.book_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.building_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.classroom_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.compatriot_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.countries (id integer not null, begin_on date not null, short_name varchar(50) not null, end_on date, updated_at timestamp not null, alpha3_code varchar(3) not null, alpha2_code varchar(2) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.course_take_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.day_parts (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, color varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.degree_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.degrees (id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.difficulty_causes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.difficulty_degrees (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.discipline_catalogs (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.discipline_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.disciplines (catalog_id integer not null, id integer not null, begin_on date not null, category_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.divisions (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.duty_grades (duty_type_id integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.duty_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.edu_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_degrees (result_id integer not null, id integer not null, begin_on date not null, end_on date, level_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_levels (to_level_id integer not null, id integer not null, begin_on date not null, from_level_id integer not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.education_results (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.election_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.employ_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.enroll_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_forms (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_modes (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_statuses (attended boolean not null, has_deferred boolean not null, id integer not null, begin_on date not null, end_on date, cheating boolean not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.exam_types (id integer not null, for_deferred boolean not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.family_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.family_relationships (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.fee_origins (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.genders (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.grade_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, exam_type_id integer, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.grading_modes (numerical boolean not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.health_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.household_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.hsk_levels (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.id_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.institutions (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.job_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.language_abilities (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.languages (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.marital_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.nations (id integer not null, end_on date, updated_at timestamp not null, begin_on date not null, alpha_code varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.passport_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.political_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.post_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.post_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.press_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.presses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.professional_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.professional_titles (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.publication_grades (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.publications (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, grade_id integer not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.railway_stations (division_id integer not null, id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, jianpin varchar(50) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.religions (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.room_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.social_unit_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.staff_source_types (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.staff_types (id integer not null, begin_on date not null, end_on date, parent_id integer not null, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_alter_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_alter_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.std_punishment_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.student_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.study_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.teach_lang_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.tutor_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.uee_subject_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.uncheckin_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.unregistered_reasons (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.visa_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table code.work_statuses (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.apply_depart_checks (opinions varchar(100), checked_by_id bigint not null, checked_at timestamp not null, id bigint not null, apply_id bigint not null, approved boolean not null);
create table edu.apply_final_checks (opinions varchar(100), checked_by_id bigint not null, checked_at timestamp not null, id bigint not null, apply_id bigint not null, approved boolean not null);
create table edu.available_times (updated_at timestamp not null, project_id integer not null, id bigint not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, room_id bigint not null);
create table edu.capacity_factors (name varchar(255) not null, id bigint not null, remark varchar(255), begin_on date not null, end_on date, condition_exp varchar(255) not null);
create table edu.certificate_categories (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.certificate_grades (acquired_on date not null, score float4, passed boolean not null, std_id bigint not null, id bigint not null, status integer not null, grading_mode_id integer not null, score_text varchar(5) not null, certificate varchar(80), updated_at timestamp not null, subject_id integer not null, exam_status_id integer not null, exam_no varchar(80));
create table edu.certificate_grades_courses (certificate_grade_id bigint not null, course_id bigint not null);
create table edu.certificate_subjects (id integer not null, begin_on date not null, category_id integer not null, institution_code varchar(255), end_on date, institution_name varchar(255), updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.clazz_book_stats (clazz_id bigint not null, std_count integer not null, stat_at timestamp not null, id bigint not null, textbook_id bigint not null, teacher_count integer not null);
create table edu.clazz_eval_stats (semester_id integer not null, total_tickets integer not null, school_rank integer not null, teacher_id bigint not null, clazz_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, stat_at timestamp not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null, depart_rank integer not null);
create table edu.clazz_groups (semester_id integer not null, name varchar(255) not null, course_id bigint, project_id integer not null, id bigint not null, teach_depart_id integer);
create table edu.clazz_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table edu.clazz_question_stats (question_id bigint not null, eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null);
create table edu.clazz_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu.clazz_tags (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, color varchar(255) not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table edu.clazzes (semester_id integer not null, project_id integer not null, audit_state integer not null, id bigint not null, exam_duration smallint not null, exam_form_id integer, exam_room_type_id integer not null, exam_begin_at smallint not null, exam_on date, exam_end_at smallint not null, has_makeup boolean not null, exam_mode_id integer not null, campus_id integer not null, name varchar(500) not null, updated_at timestamp not null, course_id bigint not null, reserved integer not null, locked boolean not null, gender_ratio smallint not null, grade varchar(20), depart_id integer, capacity integer not null, actual integer not null, subject varchar(255), course_type_id integer not null, teach_depart_id integer not null, remark varchar(255), crn varchar(32) not null, weekstate bigint not null, credit_hours integer not null, room_type_id integer not null, group_id bigint, lang_type_id integer not null);
create table edu.clazzes_ability_rates (clazz_id bigint not null, course_ability_rate_id integer not null);
create table edu.clazzes_tags (clazz_id bigint not null, clazz_tag_id integer not null);
create table edu.clazzes_teachers (clazz_id bigint not null, teacher_id bigint not null, idx integer not null);
create table edu.course_audit_results (course_id bigint not null, passed boolean not null, remark varchar(50), scores varchar(50) not null, terms integer not null, compulsory boolean not null, group_result_id bigint not null, id bigint not null);
create table edu.course_eval_stats (semester_id integer not null, total_tickets integer not null, school_rank integer not null, course_id bigint not null, teacher_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, stat_at timestamp not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null, depart_rank integer not null);
create table edu.course_grade_states (updated_at timestamp not null, clazz_id bigint not null, grading_mode_id integer not null, inputer_id bigint, score_precision integer not null, id bigint not null, status integer not null, operator varchar(100) not null);
create table edu.course_grades (semester_id integer not null, course_id bigint not null, course_type_id integer not null, project_id integer not null, score float4, passed boolean not null, id bigint not null, remark varchar(200), crn varchar(20) not null, gp float4, score_text varchar(5), free_listening boolean not null, updated_at timestamp not null, clazz_id bigint, std_id bigint not null, exam_mode_id integer not null, operator varchar(100), status integer not null, grading_mode_id integer not null, created_at timestamp not null, course_take_type_id integer not null);
create table edu.course_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table edu.course_profiles (website varchar(255), course_id bigint not null, materials varchar(255), description varchar(40000) not null, textbooks varchar(255), id bigint not null, prerequisites varchar(255), updated_by_id bigint, en_description varchar(40000), majors varchar(255), updated_at timestamp not null);
create table edu.course_question_stats (question_id bigint not null, eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null);
create table edu.course_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu.course_takers (semester_id integer not null, updated_at timestamp not null, course_id bigint not null, clazz_id bigint not null, std_id bigint not null, alternative boolean not null, id bigint not null, restriction_id bigint, take_type_id integer not null, free_listening boolean not null, election_mode_id integer not null, remark varchar(100));
create table edu.depart_eval_stats (semester_id integer not null, total_tickets integer not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null, department_id integer not null, stat_at timestamp not null);
create table edu.depart_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table edu.depart_question_stats (question_id bigint not null, eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null);
create table edu.depart_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu.evaluate_results (student_id bigint not null, teacher_id bigint not null, clazz_id bigint not null, score float4 not null, department_id integer not null, id bigint not null, evaluate_at timestamp not null, questionnaire_id bigint not null, stat_type integer not null, remark varchar(20) not null);
create table edu.evaluation_criteria_items (name varchar(255) not null, max_score float4 not null, criteria_id bigint not null, min_score float4 not null, id bigint not null);
create table edu.evaluation_criterias (name varchar(100) not null, project_id integer not null, id bigint not null, depart_id integer not null);
create table edu.exam_activities (semester_id integer not null, centralized boolean, task_id bigint, exam_type_id integer not null, begin_at smallint not null, remark varchar(100), exam_on date, end_at smallint not null, clazz_id bigint not null, exam_week integer, std_count integer not null, publish_state integer not null, exam_paper_no varchar(255), id bigint not null);
create table edu.exam_activities_rooms (exam_activity_id bigint not null, exam_room_id bigint not null);
create table edu.exam_grade_states (updated_at timestamp not null, grade_state_id bigint not null, id bigint not null, remark varchar(255), grading_mode_id integer not null, score_percent smallint, grade_type_id integer not null, status integer not null, operator varchar(100) not null);
create table edu.exam_grades (updated_at timestamp not null, exam_status_id integer not null, score float4, passed boolean not null, id bigint not null, score_percent smallint, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, created_at timestamp not null, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu.exam_groups (semester_id integer not null, exam_type_id integer not null, id bigint not null, begin_on date not null, alloc_setting_id bigint not null, max_course_conflict_ratio float4 not null, min_course_conflict_count integer not null, end_on date not null, name varchar(255) not null, updated_at timestamp not null, allow_in_class boolean not null, project_id integer not null, publish_state integer not null);
create table edu.exam_groups_rooms (exam_group_id bigint not null, classroom_id bigint not null);
create table edu.exam_rooms (semester_id integer not null, exam_type_id integer not null, std_count integer not null, id bigint not null, teach_depart_id integer not null, end_at smallint not null, begin_at smallint not null, exam_on date not null, room_id bigint not null);
create table edu.exam_rooms_activities (exam_room_id bigint not null, exam_activity_id bigint not null);
create table edu.exam_takers (semester_id integer not null, exam_status_id integer not null, clazz_id bigint not null, exam_type_id integer not null, exam_room_id bigint, std_id bigint not null, id bigint not null, remark varchar(255), seat_no smallint not null, activity_id bigint);
create table edu.exam_tasks (semester_id integer not null, duration smallint not null, centralized boolean not null, exam_week smallint, project_id integer not null, room_type_id integer, code varchar(255) not null, id bigint not null, max_course_conflict_ratio float4, exam_on date, group_id bigint, end_at smallint not null, exam_type_id integer not null, room_group_id bigint, begin_at smallint not null, time_allotted boolean not null, building_id integer, std_count integer not null, teach_depart_id integer not null, remark varchar(255));
create table edu.exam_tasks_rooms (exam_task_id bigint not null, classroom_id bigint not null);
create table edu.exam_turns (begin_at smallint not null, id bigint not null, exam_on date not null, group_id bigint not null, capacity integer, end_at smallint not null);
create table edu.exchange_grades (updated_at timestamp not null, acquired_on date not null, credits float4 not null, id bigint not null, remark varchar(255), exchange_student_id bigint not null, course_name varchar(255) not null, score_text varchar(10) not null);
create table edu.exchange_grades_courses (exchange_grade_id bigint not null, course_id bigint not null);
create table edu.exchange_schools (project_id integer not null, code varchar(255) not null, id integer not null, begin_on date not null, end_on date, name varchar(255) not null, updated_at timestamp not null);
create table edu.exchange_students (exemption_credits float4 not null, school_id integer not null, updated_at timestamp not null, major_name varchar(255), credits float4 not null, std_id bigint not null, audit_state integer not null, id bigint not null, begin_on date not null, level_id integer not null, audit_opinion varchar(255), category_id integer not null, end_on date not null, transcript_path varchar(255));
create table edu.execution_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(40) not null, terms integer not null, plan_id bigint not null, parent_id bigint, given_name varchar(100), credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu.execution_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu.execution_plans (program_id bigint not null, updated_at timestamp not null, credits float4 not null, audit_state integer not null, department_id integer not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, std_type_id integer, campus_id integer, end_on date not null, start_term smallint not null);
create table edu.exemption_credits (updated_at timestamp not null, std_id bigint not null, id bigint not null, remark varchar(255), exempted float4 not null, max_value float4 not null);
create table edu.factor_segments (max_capacity integer not null, factor_exp varchar(255) not null, factor_id bigint not null, min_capacity integer not null, id bigint not null);
create table edu.final_makeup_courses (semester_id integer not null, course_id bigint not null, teacher_id bigint, project_id integer not null, std_count integer not null, input_at timestamp, status integer not null, crn varchar(255) not null, depart_id integer not null, id bigint not null);
create table edu.final_makeup_courses_squads (final_makeup_course_id bigint not null, squad_id bigint not null);
create table edu.final_makeup_takers (updated_at timestamp not null, course_type_id integer not null, makeup_course_id bigint not null, std_id bigint not null, id bigint not null, remark varchar(255), scores varchar(255) not null);
create table edu.final_teacher_scores (semester_id integer not null, school_rank integer not null, teacher_id bigint not null, score float4 not null, supvi_score float4 not null, id bigint not null, std_score float4 not null, depart_score float4 not null, depart_rank integer not null);
create table edu.ga_grade_states (updated_at timestamp not null, grade_state_id bigint not null, id bigint not null, remark varchar(50), grading_mode_id integer not null, grade_type_id integer not null, status integer not null, operator varchar(100) not null);
create table edu.ga_grades (updated_at timestamp not null, score float4, passed boolean not null, id bigint not null, remark varchar(255), gp float4, grade_type_id integer not null, course_grade_id bigint not null, status integer not null, delta float4, created_at timestamp not null, grading_mode_id integer not null, score_text varchar(5), operator varchar(100));
create table edu.grade_rate_configs (project_id integer not null, pass_score float4 not null, id bigint not null, grading_mode_id integer not null);
create table edu.grade_rate_items (max_score float4 not null, default_score float4 not null, gp_exp varchar(255), config_id bigint not null, min_score float4 not null, id bigint not null, grade varchar(255) not null);
create table edu.group_audit_results (name varchar(100) not null, course_type_id integer not null, id bigint not null, remark varchar(255), indexno varchar(255) not null, parent_id bigint, required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, passed boolean not null, sub_count smallint not null, plan_result_id bigint not null);
create table edu.invigilation_clazz_quotas (teacher_id bigint not null, clazz_id bigint not null, credit_hours float4 not null, amount float4 not null, id bigint not null, ratio float4 not null);
create table edu.invigilation_quota_details (quota_id bigint not null, amount float4 not null, id bigint not null, depart_id integer not null, campus_id integer not null);
create table edu.invigilation_quotas (semester_id integer not null, project_id integer not null, invigilator_id bigint not null, amount integer not null, id bigint not null, remark varchar(255));
create table edu.invigilation_quotas_excludes (invigilation_quota_id bigint not null, exclude_on date not null);
create table edu.invigilations (chief boolean not null, invigilator_name varchar(255), updated_at timestamp not null, department_id integer not null, id bigint not null, invigilator_id bigint, published boolean not null, exam_room_id bigint not null);
create table edu.lecture_plans (semester_id integer not null, author_id bigint not null, updated_at timestamp not null, clazz_id bigint not null, audit_at timestamp, passed boolean, doc_locale varchar(255) not null, mime_type varchar(255) not null, id bigint not null, file_size integer not null, file_path varchar(255) not null, auditor_id bigint);
create table edu.lessons (clazz_id bigint not null, contents varchar(255) not null, id bigint not null, open_on date not null, end_at smallint not null, begin_at smallint not null);
create table edu.lessons_rooms (lesson_id bigint not null, classroom_id bigint not null);
create table edu.lessons_teachers (lesson_id bigint not null, teacher_id bigint not null);
create table edu.major_alt_courses (updated_at timestamp not null, project_id integer not null, to_grade varchar(10) not null, direction_id bigint, department_id integer, id bigint not null, remark varchar(255), from_grade varchar(10) not null, std_type_id integer, major_id bigint, level_id integer not null);
create table edu.major_alt_courses_news (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu.major_alt_courses_olds (major_alternative_course_id bigint not null, course_id bigint not null);
create table edu.major_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(40) not null, terms integer not null, plan_id bigint not null, parent_id bigint, given_name varchar(100), credits float4 not null, sub_count smallint not null, direction_id bigint, indexno varchar(20) not null, remark varchar(200));
create table edu.major_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null, compulsory boolean not null, suggest_terms integer not null, remark varchar(200));
create table edu.major_plans (program_id bigint not null, updated_at timestamp not null, credits float4 not null, audit_state integer not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, end_on date not null, start_term smallint not null);
create table edu.materials (submit_at timestamp, passed boolean, adoption integer not null, id bigint not null, remark varchar(200), clazz_id bigint not null, materials varchar(255), ordered boolean not null);
create table edu.materials_books (material_id bigint not null, textbook_id bigint not null);
create table edu.moral_grades (semester_id integer not null, score float4, passed boolean not null, std_id bigint not null, id bigint not null, grading_mode_id integer not null, score_text varchar(5) not null, operator varchar(100) not null, status integer not null);
create table edu.occupancies (updated_at timestamp not null, activity_id bigint not null, app_id bigint not null, start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null, room_id bigint not null, comments varchar(300) not null, activity_type_id integer not null, id bigint not null);
create table edu.option_groups (name varchar(50) not null, project_id integer not null, id bigint not null, oppo_val float4 not null);
create table edu.options (name varchar(50) not null, proportion float4 not null, id bigint not null, option_group_id bigint not null);
create table edu.plan_audit_results (required_credits float4 not null, converted_credits float4 not null, required_count integer not null, passed_credits float4 not null, passed_count integer not null, updated_at timestamp not null, archived boolean not null, passed boolean not null, std_id bigint not null, id bigint not null, updates varchar(500), remark varchar(100));
create table edu.program_doc_metas (name varchar(255) not null, id integer not null, indexno varchar(255) not null, template_id integer not null, maxlength integer not null);
create table edu.program_doc_sections (name varchar(255) not null, doc_id bigint not null, contents varchar(10000) not null, id bigint not null, indexno varchar(255) not null, parent_id bigint);
create table edu.program_doc_templates (project_id integer not null, doc_locale varchar(255) not null, department_id integer, id integer not null, begin_on date not null, end_on date, level_id integer not null, name varchar(255) not null, updated_at timestamp not null);
create table edu.program_doc_templates_types (program_doc_template_id integer not null, std_type_id integer not null);
create table edu.program_docs (updated_at timestamp not null, doc_locale varchar(255) not null, id bigint not null, program_id bigint not null);
create table edu.programs (duration float4 not null, degree_id integer, project_id integer not null, direction_id bigint, audit_state integer not null, department_id integer not null, id bigint not null, begin_on date not null, std_type_id integer, study_type_id integer not null, degree_gpa float4, end_on date, major_id bigint not null, level_id integer not null, name varchar(100) not null, updated_at timestamp not null, grade varchar(10) not null, remark varchar(200), campus_id integer, offset_type_id integer);
create table edu.question_results (question_id bigint not null, result_id bigint not null, id bigint not null, question_type_id bigint not null, score float4 not null, option_id bigint not null);
create table edu.question_types (project_id integer not null, en_name varchar(100), id bigint not null, remark varchar(100), begin_on date not null, end_on date, name varchar(50) not null, updated_at timestamp not null, priority integer not null);
create table edu.questionnaire_clazzes (clazz_id bigint not null, id bigint not null, evaluate_by_teacher boolean not null, questionnaire_id bigint not null);
create table edu.questionnaires (updated_at timestamp not null, project_id integer not null, description varchar(500) not null, id bigint not null, create_by varchar(255) not null, begin_on date not null, depart_id integer not null, title varchar(200) not null, end_on date, remark varchar(200));
create table edu.questionnaires_questions (questionnaire_id bigint not null, question_id bigint not null);
create table edu.questions (project_id integer not null, score float4 not null, contents varchar(400) not null, remark varchar(200), begin_on date not null, option_group_id bigint not null, question_type_id bigint not null, depart_id integer not null, end_on date, updated_at timestamp not null, priority integer not null, addition boolean not null, id bigint not null);
create table edu.restriction_items (contents varchar(255) not null, restriction_id bigint not null, include_in boolean not null, id bigint not null, meta integer not null);
create table edu.restrictions (clazz_id bigint not null, cur_count integer not null, max_count integer not null, id bigint not null, prime boolean not null, parent_id bigint);
create table edu.room_alloc_settings (name varchar(255) not null, project_id integer not null, exam_type_id integer not null, alloc_policy integer not null, min_occupy_ratio float4 not null, min_capacity integer not null, id bigint not null);
create table edu.room_applies (school_id integer not null, apply_at timestamp not null, final_check_id bigint, depart_check_id bigint, id bigint not null, campus_id integer not null, require_multimedia boolean not null, unit_attendance integer not null, room_comment varchar(255), minutes integer not null, begin_on date not null, time_comment varchar(255), end_on date not null, speaker varchar(255) not null, activity_name varchar(255) not null, attendance_num integer not null, activity_type_id integer not null, attendance varchar(255) not null, approved boolean, apply_by_id bigint not null, mobile varchar(255) not null, department_id integer not null, email varchar(255), applicant varchar(255) not null);
create table edu.room_applies_times (room_apply_id bigint not null, weekstate bigint not null, begin_at smallint not null, start_on date not null, end_at smallint not null);
create table edu.room_groups (project_id integer not null, id bigint not null, name varchar(255) not null, updated_at timestamp not null);
create table edu.room_groups_rooms (room_group_id bigint not null, classroom_id bigint not null);
create table edu.room_occupy_apps (activity_url varchar(200) not null, name varchar(200) not null, id bigint not null);
create table edu.school_eval_stats (semester_id integer not null, total_tickets integer not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, stat_at timestamp not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null);
create table edu.school_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table edu.school_question_stats (question_id bigint not null, eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null);
create table edu.school_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu.sessions (clazz_id bigint not null, id bigint not null, remark varchar(200), start_on date not null, end_at smallint not null, begin_at smallint not null, weekstate bigint not null);
create table edu.sessions_rooms (session_id bigint not null, classroom_id bigint not null);
create table edu.sessions_teachers (session_id bigint not null, teacher_id bigint not null);
create table edu.share_course_groups (course_type_id integer not null, id bigint not null, language_id integer, plan_id bigint not null, parent_id bigint, course_ability_rate_id integer, indexno varchar(255) not null);
create table edu.share_plan_courses (stage_id integer, course_id bigint not null, weekstate bigint not null, exam_mode_id integer not null, department_id integer not null, id bigint not null, terms integer not null, group_id bigint not null);
create table edu.share_plans (project_id integer not null, to_grade varchar(255) not null, id bigint not null, remark varchar(200), end_on date, level_id integer not null, name varchar(255) not null, updated_at timestamp not null, from_grade varchar(255) not null, begin_on date not null);
create table edu.std_alt_courses (updated_at timestamp not null, std_id bigint not null, id bigint not null, remark varchar(255));
create table edu.std_alt_courses_news (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu.std_alt_courses_olds (std_alternative_course_id bigint not null, course_id bigint not null);
create table edu.std_book_orders (semester_id integer not null, course_id bigint not null, std_id bigint not null, id bigint not null, teach_depart_id integer not null, teacher_names varchar(255), crn varchar(255) not null, created_at timestamp not null, textbook_id bigint not null, withdraw_at timestamp, withdrawed boolean not null, project_id integer not null);
create table edu.std_course_abilities (rate_id integer not null, updated_at timestamp not null, score float4, std_id bigint not null, id bigint not null);
create table edu.std_course_groups (course_type_id integer not null, auto_addup boolean not null, course_count smallint not null, id bigint not null, term_credits varchar(255) not null, terms integer not null, plan_id bigint not null, parent_id bigint, given_name varchar(255), credits float4 not null, sub_count smallint not null, indexno varchar(20) not null, remark varchar(200));
create table edu.std_gpas (updated_at timestamp not null, gpa float4 not null, credits float4 not null, std_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null, project_id integer not null, ga float4 not null);
create table edu.std_plan_courses (course_id bigint not null, id bigint not null, terms integer not null, compulsory boolean not null, group_id bigint not null, remark varchar(200));
create table edu.std_plans (program_id bigint not null, updated_at timestamp not null, credits float4 not null, std_id bigint not null, audit_state integer not null, id bigint not null, end_term smallint not null, remark varchar(200), begin_on date not null, end_on date not null, start_term smallint not null);
create table edu.std_semester_gpas (semester_id integer not null, ga float4 not null, gpa float4 not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null);
create table edu.std_year_gpas (ga float4 not null, gpa float4 not null, school_year varchar(255) not null, credits float4 not null, std_gpa_id bigint not null, id bigint not null, grade_count integer not null, total_credits float4 not null);
create table edu.syllabus_files (doc_locale varchar(255) not null, mime_type varchar(255) not null, id bigint not null, file_size integer not null, file_path varchar(255) not null, syllabus_id bigint not null);
create table edu.syllabuses (semester_id integer not null, author_id bigint not null, updated_at timestamp not null, course_id bigint not null, teaching_group_id bigint, audit_at timestamp, department_id integer not null, id bigint not null, end_on date not null, auditor_id bigint, begin_on date not null, status integer not null);
create table edu.teacher_eval_stats (semester_id integer not null, total_tickets integer not null, school_rank integer not null, teacher_id bigint not null, avg_score float4 not null, tickets integer not null, published boolean not null, add_score float8 not null, stat_at timestamp not null, id bigint not null, total_score float4 not null, questionnaire_id bigint not null, depart_rank integer not null);
create table edu.teacher_option_stats (option_id bigint not null, amount integer not null, id bigint not null, question_stat_id bigint not null);
create table edu.teacher_question_stats (question_id bigint not null, eval_stat_id bigint not null, avg_score float8 not null, id bigint not null, total_score float8 not null, stddev float8 not null);
create table edu.teacher_question_type_stats (eval_stat_id bigint not null, avg_score float4 not null, id bigint not null, total_score float4 not null, question_type_id bigint not null);
create table edu.teacher_remessages (updated_at timestamp not null, remessage varchar(255) not null, text_evaluation_id bigint not null, id bigint not null, created_at timestamp not null, visible boolean not null);
create table edu.teacher_remessages_students (teacher_remessage_id bigint not null, student_id bigint not null);
create table edu.teaching_loads (semester_id integer not null, teacher_title_id integer not null, course_id bigint not null, clazz_id bigint not null, capacity_factor_id bigint not null, credit_hours integer not null, std_count integer not null, factor float4 not null, load_hours float4 not null, id bigint not null);
create table edu.teaching_loads_clazz_tags (teaching_load_id bigint not null, clazz_tag_id integer not null);
create table edu.term_campuses (program_id bigint not null, id bigint not null, terms integer not null, campus_id integer not null);
create table edu.text_evaluations (student_id bigint not null, teacher_id bigint not null, clazz_id bigint not null, audited boolean not null, contents varchar(255) not null, evaluate_by_teacher boolean not null, evaluate_at timestamp not null, id bigint not null);
create table hr.addresses (geo varchar(50) not null, postal_code varchar(30) not null, id bigint not null, pref integer not null, pobox varchar(50) not null, region varchar(50) not null, street varchar(100) not null, locality varchar(80) not null, extended varchar(30) not null, country_id integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.contacts (updated_at timestamp not null, uuid varchar(60) not null, revision bigint not null, anniversary date, person_id bigint not null, sort_as varchar(100) not null, id bigint not null);
create table hr.duty_infoes (name varchar(255) not null, duty_type_id integer not null, id bigint not null, staff_id bigint not null, end_on date, begin_on date not null, duty_grade_id integer not null);
create table hr.education_infoes (certificate_no varchar(50) not null, degree_id integer not null, witness varchar(255) not null, contents varchar(255) not null, education_degree_id integer not null, id bigint not null, remark varchar(255) not null, begin_on date not null, study_type_id integer not null, staff_id bigint not null, end_on date, major varchar(100) not null, duration float4 not null, school varchar(200) not null);
create table hr.emails (email varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.family_members (name varchar(50) not null, political_status_id integer not null, job_status_id integer not null, country_id integer not null, code varchar(255) not null, id bigint not null, staff_id bigint not null, title_id integer not null, mobile varchar(255) not null, sid varchar(50) not null, work_place varchar(255) not null, birthday date not null, id_type_id integer not null, email varchar(255) not null, nation_id integer not null, family_relationship_id integer not null, annual_income float4 not null, health_status_id integer not null, job varchar(255) not null);
create table hr.geos (longitude float8 not null, id bigint not null, pref integer not null, latitude float8 not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.healths (weight float4 not null, blood_type_id integer not null, health_status_id integer not null, height float4 not null, id bigint not null, staff_id bigint not null);
create table hr.impps (id bigint not null, pref integer not null, impp varchar(100) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.nicknames (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.notes (id bigint not null, pref integer not null, note varchar(500) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.orgs (name varchar(100) not null, id bigint not null, pref integer not null, unit varchar(50) not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.photos (uri varchar(150) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.post_infoes (post_grade_id integer not null, id bigint not null, begin_on date not null, end_on date, parttime boolean not null, post_type_id integer not null, staff_id bigint not null);
create table hr.relateds (id bigint not null, contact_id bigint not null, related varchar(150) not null, pref integer not null, typenames varchar(100) not null);
create table hr.roles (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.staff_states (department_id integer not null, id bigint not null, staff_id bigint not null, end_on date, begin_on date not null, status_id integer not null);
create table hr.staffs (work_start_on date not null, state_id bigint not null, employ_on date not null, employ_type_id integer not null, code varchar(30) not null, id bigint not null, person_id bigint not null, updated_at timestamp not null, source_type_id integer not null, registed boolean not null, staff_type_id integer not null);
create table hr.teacher_profiles (harvest varchar(40000), updated_at timestamp not null, id bigint not null, intro varchar(40000) not null, teacher_id bigint not null, research varchar(255), contact varchar(255), teaching_career varchar(1000), titles varchar(1000));
create table hr.telephones (tel varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.timezones (timezone varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.title_infoes (id bigint not null, begin_on date not null, staff_id bigint not null, title_id integer not null, end_on date);
create table hr.titles (name varchar(100) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.tutor_infoes (tutor_type_id integer not null, id bigint not null, begin_on date not null, staff_id bigint not null, end_on date);
create table hr.urls (url varchar(150) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table hr.work_infoes (admin_position varchar(255) not null, witness varchar(255) not null, id bigint not null, remark varchar(255) not null, begin_on date not null, staff_id bigint not null, title_id integer not null, end_on date, work_place varchar(255) not null, work_content varchar(255) not null);
create table hr.xtendeds (xname varchar(50) not null, xvalue varchar(200) not null, id bigint not null, pref integer not null, contact_id bigint not null, typenames varchar(100) not null);
create table prac.batches (name varchar(255) not null, archived boolean not null, id integer not null, begin_on date not null, end_on date not null, school_id integer not null);
create table prac.closure_review_details (review_id bigint not null, updated_at timestamp not null, score float4, expert_id bigint not null, submited boolean not null, id bigint not null, comments varchar(600), level_id integer);
create table prac.closure_review_groups (name varchar(255) not null, discipline_id integer not null, batch_id integer not null, id bigint not null);
create table prac.closure_review_groups_experts (closure_review_group_id bigint not null, expert_id bigint not null);
create table prac.closure_reviews (project_id bigint not null, score float4, id bigint not null, group_id bigint);
create table prac.closures (updated_at timestamp not null, reply_score integer, exemption_confirmed boolean, id bigint not null, apply_reject_comment varchar(255), apply_exemption_reply boolean not null, exemption_reason varchar(200), project_id bigint not null);
create table prac.experts (name varchar(50) not null, code varchar(20) not null, id bigint not null, begin_on date not null, intro varchar(300), end_on date not null, password varchar(255) not null);
create table prac.init_review_details (review_id bigint not null, updated_at timestamp not null, score float4, passed boolean, expert_id bigint not null, submited boolean not null, id bigint not null, comments varchar(600));
create table prac.init_review_groups (name varchar(255) not null, discipline_id integer not null, batch_id integer not null, id bigint not null);
create table prac.init_review_groups_experts (init_review_group_id bigint not null, expert_id bigint not null);
create table prac.init_reviews (project_id bigint not null, score float4, id bigint not null, group_id bigint);
create table prac.innov_projects (code varchar(255), remark varchar(255), intro_id bigint, title varchar(255) not null, end_on date, level_id integer not null, state_id integer not null, department_id integer not null, batch_id integer not null, id bigint not null, begin_on date not null, manager_id bigint, discipline_id integer not null, category_id integer not null, funds integer not null);
create table prac.innov_projects_instructors (innov_project_id bigint not null, teacher_id bigint not null, idx integer not null);
create table prac.introes (project_id bigint not null, summaries varchar(500) not null, id bigint not null, innovation varchar(300) not null, product varchar(300) not null);
create table prac.level_jounals (updated_at timestamp not null, project_id bigint not null, id bigint not null, award_year integer not null, level_id integer not null);
create table prac.materials (updated_at timestamp not null, project_id bigint not null, file_name varchar(200) not null, id bigint not null, file_size integer not null, stage_type_id integer not null, sha varchar(255) not null, file_path varchar(255) not null);
create table prac.members (duty varchar(255) not null, email varchar(255), project_id bigint not null, std_id bigint not null, id bigint not null, hobby varchar(255), remark varchar(255), phone varchar(255) not null);
create table prac.project_categories (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.project_levels (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.project_states (code varchar(255) not null, name varchar(255) not null, id integer not null);
create table prac.stage_types (name varchar(255) not null, code varchar(255) not null, id integer not null, end_on date, parent_id integer, begin_on date not null, indexno varchar(255) not null);
create table prac.stages (begin_at timestamp not null, notice_href varchar(255), remark varchar(255), stage_type_id integer not null, end_at timestamp not null, batch_id integer not null, id integer not null);
create table sin.assume_roles (code varchar(10) not null, name varchar(80) not null, id integer not null);
create table sin.harvest_types (parent_id integer not null, name varchar(80) not null, code varchar(10) not null, id integer not null);
create table sin.literature_members (researcher_id bigint not null, literature_id integer not null, id integer not null, contribution_count float4 not null, name varchar(80) not null, assume_role_id integer not null, department_id integer not null, sign integer not null);
create table sin.literatures (researcher_id bigint not null, harvest_type_id integer not null, publish_house varchar(255) not null, word_count float4 not null, published_on date not null, id integer not null, isbn varchar(100) not null, confirm boolean not null, name varchar(300) not null, introduction varchar(2000) not null, department_id integer not null, translated boolean not null);
create table sin.published_ranges (code varchar(10) not null, name varchar(80) not null, id integer not null);
create table sin.published_situations (name varchar(300) not null, en_name varchar(200) not null, cn varchar(100) not null, published_on date not null, translated boolean not null, id integer not null, isbn varchar(100) not null, published_range_id integer not null, issn varchar(100) not null, harvest_type_id integer not null, location varchar(255) not null);
create table sin.researchers (person_id bigint not null, id bigint not null);
create table sin.thesis_harvests (name varchar(300) not null, published_situation_id integer not null, word_count integer not null, summaries varchar(2000) not null, department_id integer not null, id integer not null, confirm boolean not null, apply_on date not null, researcher_id bigint not null);
create table std.admissions (letter_no varchar(30), std_id bigint not null, department_id integer not null, id bigint not null, admission_index integer, enroll_on date not null, education_mode_id integer, major_id bigint not null, updated_at timestamp not null, enroll_mode_id integer);
create table std.bills (semester_id integer not null, updated_at timestamp not null, payed integer not null, pay_at timestamp, std_id bigint not null, amount integer not null, id bigint not null, created_at timestamp not null, fee_type_id integer not null, depart_id integer not null, updated_by varchar(255) not null, invoice_code varchar(255), remark varchar(255));
create table std.contacts (updated_at timestamp not null, std_id bigint not null, id bigint not null, mail varchar(100), address varchar(150), mobile varchar(20), phone varchar(20));
create table std.degree_applies (updated_at timestamp not null, degree_id integer not null, gpa float4 not null, passed boolean, std_id bigint not null, id bigint not null, session_id bigint not null);
create table std.degree_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table std.degree_results (updated_at timestamp not null, degree_id integer, gpa float4 not null, published boolean not null, passed boolean not null, session_id bigint not null, degree_comments varchar(500), foreign_lang_passed_on date, ga float4 not null, locked boolean not null, std_id bigint not null, batch integer not null, id bigint not null);
create table std.education_records (school varchar(255) not null, std_id bigint not null, id bigint not null, begin_on date not null, end_on date not null);
create table std.examinees (school_no varchar(30), updated_at timestamp not null, score float4, id bigint not null, graduate_on date, school_name varchar(200), std_id bigint not null, origin_division_id integer, exam_no varchar(30), code varchar(30) not null, province varchar(50));
create table std.examinees_scores (examinee_id bigint not null, score float4 not null, name integer not null);
create table std.fee_types (id integer not null, begin_on date not null, end_on date, updated_at timestamp not null, code varchar(20) not null unique, en_name varchar(300), name varchar(100) not null, remark varchar(200));
create table std.graduate_audit_items (name varchar(100) not null, result_id bigint not null, passed boolean not null, id bigint not null, comments varchar(500));
create table std.graduate_results (elected_credits float4 not null, updated_at timestamp not null, required_credits float4 not null, published boolean not null, passed boolean, education_result_id integer, session_id bigint not null, acquired_credits float4 not null, graduate_comments varchar(500), locked boolean not null, std_id bigint not null, batch integer not null, id bigint not null);
create table std.graduate_sessions (project_id integer not null, id bigint not null, graduate_on date not null, degree_offered boolean not null, name varchar(100) not null, updated_at timestamp not null);
create table std.graduations (updated_at timestamp not null, degree_id integer, foreign_lang_passed_on date, degree_award_on date, education_result_id integer not null, std_id bigint not null, code varchar(255) not null, id bigint not null, graduate_on date not null, diploma_no varchar(255));
create table std.homes (updated_at timestamp not null, police varchar(150), postcode varchar(20), railway_station_id integer, std_id bigint not null, former_addr varchar(100), id bigint not null, phone varchar(20), police_phone varchar(20), address varchar(150));
create table std.orders (pay_at timestamp, std_id bigint not null, amount integer not null, code varchar(50) not null unique, id bigint not null, bill_id bigint not null, status varchar(255) not null, created_at timestamp not null, pay_url varchar(500) not null, expired_at timestamp not null, channel varchar(255), remark varchar(255), paid boolean not null);
create table std.registers (checkin boolean, registered boolean, operate_ip varchar(100) not null, std_id bigint not null, register_at timestamp, id bigint not null, remark varchar(50), unregistered_reason_id integer, operate_by varchar(50) not null, tuition_paid boolean, uncheckin_reason_id integer, semester_id integer not null);
create table std.social_relations (name varchar(255) not null, relation varchar(255) not null, std_id bigint not null, id bigint not null);
create table std.std_alteration_items (alteration_id bigint not null, oldtext varchar(255), oldvalue varchar(100), newtext varchar(255), newvalue varchar(255), id bigint not null, meta integer not null);
create table std.std_alterations (semester_id integer not null, updated_at timestamp not null, effective boolean not null, std_id bigint not null, code varchar(255) not null, id bigint not null, remark varchar(255), begin_on date not null, alter_type_id integer not null, end_on date not null, reason_id integer);
create table std.transfer_applies (to_direction_id bigint, updated_at timestamp not null, to_squad_id bigint, to_major_id bigint not null, email varchar(255) not null, from_major_id bigint not null, id bigint not null, other_gpa float4 not null, mobile varchar(255) not null, depart_opinion varchar(255), to_grade varchar(255), gpa float4 not null, score float4, option_id bigint not null, written_score float4, passed boolean, audition_score float4, from_squad_id bigint, from_direction_id bigint, std_id bigint not null, to_depart_id integer not null, from_depart_id integer not null, reason varchar(255) not null, adjustable boolean not null, audit_state integer not null, from_grade varchar(255) not null, major_gpa float4 not null);
create table std.transfer_options (exam_addr varchar(255), written_content varchar(255), audition_content varchar(255), audition_percent integer not null, contact_info varchar(255), direction_id bigint, consult_addr varchar(255), consult_on date, id bigint not null, remark varchar(255), plan_count integer not null, depart_id integer not null, major_id bigint not null, written_percent integer not null, scheme_id bigint not null, manager_id bigint, current_count integer not null, exam_on date);
create table std.transfer_schemes (semester_id integer not null, notice_path varchar(255), project_id integer not null, published boolean not null, edit_end_at timestamp not null, id bigint not null, apply_begin_at timestamp not null, audit_end_at timestamp not null, edit_begin_at timestamp not null, apply_end_at timestamp not null, audit_begin_at timestamp not null, name varchar(255) not null, updated_at timestamp not null);
create table std.transfer_scopes (included boolean not null, id bigint not null, scheme_id bigint not null);
create table std.transfer_scopes_grades (transfer_scope_id bigint not null, value_ varchar(255) not null);
create table std.transfer_scopes_majors (transfer_scope_id bigint not null, major_id bigint not null);
create table std.tuition_configs (to_grade varchar(255) not null, amount integer not null, department_id integer, id integer not null, remark varchar(255), from_grade varchar(255) not null, fee_type_id integer not null, major_id bigint, level_id integer not null);
create table stu.employment_statuses (code varchar(40) not null, name varchar(80) not null, id bigint not null);
create table stu.graduate_sessions (code varchar(40) not null, name varchar(80) not null, id bigint not null);
create table stu.graduates (std_source varchar(100) not null, std_id bigint not null, id bigint not null, session_id bigint not null);
create table stu.honor_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), assess_period varchar(255) not null, be_rated boolean not null, honor_type_id integer not null);
create table stu.honor_levels (name varchar(255) not null, honor_category_id integer not null, enabled boolean not null, code varchar(255) not null, id integer not null, award_amount float4 not null, discription varchar(255));
create table stu.honor_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, idx varchar(255) not null);
create table stu.scholarship_awards (semester_id integer not null, be_approved boolean not null, scholarship_level_id integer not null, std_id bigint not null, id bigint not null, scholarship_category_id integer not null, award_amount float4 not null);
create table stu.scholarship_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, scholarship_type_id integer not null, begin_on date not null, end_on date, discription varchar(255), assess_period varchar(255) not null, be_rated boolean not null);
create table stu.scholarship_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), scholarship_category_id integer not null, award_amount float4 not null);
create table stu.scholarship_types (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, idx varchar(255) not null);
create table stu.std_employments (std_id bigint not null, id bigint not null, employment_status_id bigint not null);
create table stu.std_honor_awards (semester_id integer not null, std_id bigint not null, honor_level_id integer not null, id bigint not null, award_amount float4 not null, honor_category_id integer not null, be_approved boolean not null);
create table stu.stipend_awards (semester_id integer not null, be_approved boolean not null, std_id bigint not null, stipend_level_id integer not null, id bigint not null, stipend_category_id integer not null, award_amount float4 not null);
create table stu.stipend_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, begin_on date not null, end_on date, discription varchar(255), assess_period varchar(255) not null, be_rated boolean not null);
create table stu.stipend_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, stipend_category_id integer not null, award_amount float4 not null, discription varchar(255));
create table stu.subsidy_awards (semester_id integer not null, be_approved boolean not null, std_id bigint not null, id bigint not null, subsidy_level_id integer not null, award_amount float4 not null, subsidy_category_id integer not null);
create table stu.subsidy_categories (name varchar(255) not null, award_unit varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, discription varchar(255), assess_period varchar(255) not null, be_rated boolean not null);
create table stu.subsidy_levels (name varchar(255) not null, enabled boolean not null, code varchar(255) not null, id integer not null, award_amount float4 not null, discription varchar(255), subsidy_category_id integer not null);
